To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.5/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.
Daemon will be stopped at the end of the build 
Path for java installation '/usr/lib/jvm/openjdk-17' (Common Linux Locations) does not contain a java executable
Path for java installation '/usr/lib/jvm/openjdk-11' (Common Linux Locations) does not contain a java executable
> Task :app:compileJava UP-TO-DATE
> Task :app:processResources NO-SOURCE
> Task :app:classes UP-TO-DATE

> Task :app:run
Partitions considered: 50
Valid partitions: 38
Partition #2:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2]] options=2
  Component #4 [[3]] options=2
  Component #5 [[4]] options=2
  Component #6 [[5,6]] options=2
  Tuples: none
Partition #4:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2]] options=2
  Component #4 [[3]] options=2
  Component #5 [[4,6]] options=2
  Component #6 [[5]] options=2
  Tuples: none
Partition #5:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2]] options=2
  Component #4 [[3,6]] options=2
  Component #5 [[4]] options=2
  Component #6 [[5]] options=2
  Tuples: none
Partition #7:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,6]] options=2
  Component #4 [[3]] options=2
  Component #5 [[4]] options=2
  Component #6 [[5]] options=2
  Tuples: none
Partition #9:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2]] options=2
  Component #4 [[3,6]] options=2
  Component #5 [[4,5]] options=2
  Tuples: none
Partition #10:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,3]] options=2
  Component #4 [[4]] options=2
  Component #5 [[5,6]] options=2
  Tuples: none
Partition #12:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,3]] options=2
  Component #4 [[4,6]] options=2
  Component #5 [[5]] options=2
  Tuples: none
Partition #13:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,6]] options=2
  Component #4 [[3]] options=2
  Component #5 [[4,5]] options=2
  Tuples: none
Partition #14:
  Component #1 [[0,1]] options=2
  Component #2 [[2]] options=2
  Component #3 [[3]] options=2
  Component #4 [[4]] options=2
  Component #5 [[5,6]] options=2
  Tuples: none
Partition #16:
  Component #1 [[0,1]] options=2
  Component #2 [[2]] options=2
  Component #3 [[3]] options=2
  Component #4 [[4,6]] options=2
  Component #5 [[5]] options=2
  Tuples: none
Partition #17:
  Component #1 [[0,1]] options=2
  Component #2 [[2]] options=2
  Component #3 [[3,6]] options=2
  Component #4 [[4]] options=2
  Component #5 [[5]] options=2
  Tuples: none
Partition #19:
  Component #1 [[0,1]] options=2
  Component #2 [[2,6]] options=2
  Component #3 [[3]] options=2
  Component #4 [[4]] options=2
  Component #5 [[5]] options=2
  Tuples: none
Partition #20:
  Component #1 [[0,1]] options=2
  Component #2 [[2]] options=2
  Component #3 [[3,6]] options=2
  Component #4 [[4,5]] options=2
  Tuples: none
Partition #21:
  Component #1 [[0,1]] options=2
  Component #2 [[2,3]] options=2
  Component #3 [[4]] options=2
  Component #4 [[5,6]] options=2
  Tuples: none
Partition #23:
  Component #1 [[0,1]] options=2
  Component #2 [[2,3]] options=2
  Component #3 [[4,6]] options=2
  Component #4 [[5]] options=2
  Tuples: none
Partition #24:
  Component #1 [[0,1]] options=2
  Component #2 [[2,6]] options=2
  Component #3 [[3]] options=2
  Component #4 [[4,5]] options=2
  Tuples: none
Partition #25:
  Component #1 [[0,1]] options=2
  Component #2 [[2,3]] options=2
  Component #3 [[4,5,6]] options=6
  Tuples: none
Partition #26:
  Component #1 [[0,1]] options=2
  Component #2 [[2,3,6]] options=6
  Component #3 [[4,5]] options=2
  Tuples: none
Partition #27:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,3]] options=2
  Component #4 [[4,5,6]] options=6
  Tuples: none
Partition #28:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,3,6]] options=6
  Component #4 [[4,5]] options=2
  Tuples: none
Partition #29:
  Component #1 [[0,1]] options=2
  Component #2 [[2]] options=2
  Component #3 [[3]] options=2
  Component #4 [[4,5,6]] options=6
  Tuples: none
Partition #30:
  Component #1 [[0,1]] options=2
  Component #2 [[2,3,6]] options=6
  Component #3 [[4]] options=2
  Component #4 [[5]] options=2
  Tuples: none
Partition #31:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2]] options=2
  Component #4 [[3]] options=2
  Component #5 [[4,5,6]] options=6
  Tuples: none
Partition #32:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,3,6]] options=6
  Component #4 [[4]] options=2
  Component #5 [[5]] options=2
  Tuples: none
Partition #33:
  Component #1 [[0,1,2,3]] options=2
  Component #2 [[4,5,6]] options=6
  Tuples: none
Partition #34:
  Component #1 [[0,1,2,3]] options=2
  Component #2 [[4]] options=2
  Component #3 [[5,6]] options=2
  Tuples: none
Partition #36:
  Component #1 [[0,1,2,3]] options=2
  Component #2 [[4,6]] options=2
  Component #3 [[5]] options=2
  Tuples: none
Partition #38:
  Component #1 [[0,1]] options=2
  Component #2 [[2,3,4,5,6]] options=12
  Tuples: none
Partition #39:
  Component #1 [[0,1,2,3,4]] options=2
  Component #2 [[5,6]] options=2
  Tuples: none
Partition #40:
  Component #1 [[0,1,2,3,5]] options=2
  Component #2 [[4,6]] options=2
  Tuples: none
Partition #41:
  Component #1 [[0,1,2,3,6]] options=8
  Component #2 [[4,5]] options=2
  Tuples: none
Partition #42:
  Component #1 [[0]] options=2
  Component #2 [[1]] options=2
  Component #3 [[2,3,4,5,6]] options=12
  Tuples: none
Partition #45:
  Component #1 [[0,1,2,3,6]] options=8
  Component #2 [[4]] options=2
  Component #3 [[5]] options=2
  Tuples: none
Partition #46:
  Component #1 [[0]] options=2
  Component #2 [[1,2,3,4,5,6]] options=12
  Tuples: none
Partition #47:
  Component #1 [[0,1,2,3,4,6]] options=12
  Component #2 [[5]] options=2
  Tuples: none
Partition #48:
  Component #1 [[0,1,2,3,5,6]] options=12
  Component #2 [[4]] options=2
  Tuples: none
Partition #49:
  Component #1 [[0,2,3,4,5,6]] options=12
  Component #2 [[1]] options=2
  Tuples: none
Partition #50:
  Component #1 [[0,1,2,3,4,5,6]] options=156
  Tuples (showing 1):
    #1: ((((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6) ∩ id) (A→A)
{
  "meta": {
    "version": "1.0.0",
    "time_ms": 5774,
    "edge_count": 7,
    "vertex_count": 3,
    "free_vars": [
      "A"
    ]
  },
  "candidates": {
    "partitions_considered": 758,
    "filtered": 50,
    "sorting_metric": "L_then_M",
    "valid": 38
  },
  "component_cpq_catalog": [
    {
      "edges": [
        0
      ],
      "source": "A",
      "target": "B",
      "rule": "r1",
      "derivation": "Forward atom on label \u0027r1\u0027 (A→B)"
    },
    {
      "edges": [
        1
      ],
      "source": "A",
      "target": "B",
      "rule": "r2",
      "derivation": "Forward atom on label \u0027r2\u0027 (A→B)"
    },
    {
      "edges": [
        2
      ],
      "source": "B",
      "target": "C",
      "rule": "r3",
      "derivation": "Forward atom on label \u0027r3\u0027 (B→C)"
    },
    {
      "edges": [
        3
      ],
      "source": "B",
      "target": "C",
      "rule": "r4",
      "derivation": "Forward atom on label \u0027r4\u0027 (B→C)"
    },
    {
      "edges": [
        4
      ],
      "source": "A",
      "target": "C",
      "rule": "r5⁻",
      "derivation": "Inverse atom on label \u0027r5\u0027 (A→C)"
    },
    {
      "edges": [
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻◦(r6 ∩ id))",
      "derivation": "Concatenation: [r6⁻] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        4,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻◦(r6 ∩ id))",
      "derivation": "Concatenation: [r5⁻] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        5
      ],
      "source": "A",
      "target": "C",
      "rule": "r6⁻",
      "derivation": "Inverse atom on label \u0027r6\u0027 (A→C)"
    },
    {
      "edges": [
        3,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4◦(r6 ∩ id))",
      "derivation": "Concatenation: [r4] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        2,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3◦(r6 ∩ id))",
      "derivation": "Concatenation: [r3] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        4,
        5
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ r6⁻)",
      "derivation": "Intersection: [r5⁻] ∩ [r6⁻] at A→C"
    },
    {
      "edges": [
        2,
        3
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ r4)",
      "derivation": "Intersection: [r3] ∩ [r4] at B→C"
    },
    {
      "edges": [
        0,
        1
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ r2)",
      "derivation": "Intersection: [r1] ∩ [r2] at A→B"
    },
    {
      "edges": [
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((r5⁻ ∩ r6⁻)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r5⁻ ∩ r6⁻)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        2,
        3,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ r4)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r3 ∩ r4)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3
      ],
      "source": "A",
      "target": "C",
      "rule": "((r1 ∩ r2)◦(r3 ∩ r4))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [(r3 ∩ r4)] via B"
    },
    {
      "edges": [
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))",
      "derivation": "Concatenation: [((r5⁻ ∩ r6⁻)◦(r6 ∩ id))] then [(r3⁻ ∩ r4⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4
      ],
      "source": "A",
      "target": "C",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)",
      "derivation": "Intersection: [((r1 ∩ r2)◦(r3 ∩ r4))] ∩ [r5⁻] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        5
      ],
      "source": "A",
      "target": "C",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)",
      "derivation": "Intersection: [((r1 ∩ r2)◦(r3 ∩ r4))] ∩ [r6⁻] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦(r3 ∩ r4))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Intersection: [r2] ∩ [(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Intersection: [r1] ∩ [(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6) ∩ id)",
      "derivation": "Anchor with id: [(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6)] ∩ id at A"
    }
  ],
  "final_rule": "((((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6) ∩ id)",
  "final_rule_derivation": "Anchor with id: [(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6)] ∩ id at A",
  "global_cpq_catalog": [
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6) ∩ id)",
      "derivation": "Anchor with id: [(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))◦r5) ∩ id)",
      "derivation": "Anchor with id: [(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))◦r5)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))◦r6) ∩ id)",
      "derivation": "Anchor with id: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))◦r6)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))◦r5) ∩ id)",
      "derivation": "Anchor with id: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))◦r5)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦((r6 ∩ id)◦r6)) ∩ id)",
      "derivation": "Anchor with id: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦((r6 ∩ id)◦r6))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6)",
      "derivation": "Concatenation: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦((r6 ∩ id)◦r5)) ∩ id)",
      "derivation": "Anchor with id: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦((r6 ∩ id)◦r5))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))◦r5)",
      "derivation": "Concatenation: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))] then [r5] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))◦(r5 ∩ r6)) ∩ id)",
      "derivation": "Anchor with id: [((((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))◦(r5 ∩ r6))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)) ∩ id)",
      "derivation": "Anchor with id: [((((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))◦(r5 ∩ r6)) ∩ id)",
      "derivation": "Anchor with id: [(((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))◦(r5 ∩ r6))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))◦(r5 ∩ r6)) ∩ id)",
      "derivation": "Anchor with id: [(((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))◦(r5 ∩ r6))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))◦r6)",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))◦r5)",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))] then [r5] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦((r6 ∩ id)◦r6))",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)] then [((r6 ∩ id)◦r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦((r6 ∩ id)◦r5))",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)] then [((r6 ∩ id)◦r5)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4))◦((r6 ∩ id)◦(r5 ∩ r6))) ∩ id)",
      "derivation": "Anchor with id: [(((r1 ∩ r2)◦(r3 ∩ r4))◦((r6 ∩ id)◦(r5 ∩ r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4))◦(r5 ∩ ((r6 ∩ id)◦r6))) ∩ id)",
      "derivation": "Anchor with id: [(((r1 ∩ r2)◦(r3 ∩ r4))◦(r5 ∩ ((r6 ∩ id)◦r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ ((r6 ∩ id)◦r5))) ∩ id)",
      "derivation": "Anchor with id: [(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ ((r6 ∩ id)◦r5)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))◦(r5 ∩ r6))",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))] then [(r5 ∩ r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))◦(r5 ∩ r6)) ∩ id)",
      "derivation": "Anchor with id: [(((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))◦(r5 ∩ r6))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))◦(r1⁻ ∩ r2⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))◦(r1⁻ ∩ r2⁻))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))◦(r1⁻ ∩ r2⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))◦(r1⁻ ∩ r2⁻))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))◦(r1⁻ ∩ r2⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))◦(r1⁻ ∩ r2⁻))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))) ∩ id)",
      "derivation": "Anchor with id: [(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))",
      "derivation": "Concatenation: [(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))] then [(r1⁻ ∩ r2⁻)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))◦r2⁻) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))◦r2⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r2⁻) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r2⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))◦r2⁻) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))◦r2⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))◦r2⁻) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))◦r2⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))◦r2⁻) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))◦r2⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r2⁻) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r2⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦(((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ r2)◦(((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ r2)◦((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ r2)◦((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ r2)◦((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))◦(r5 ∩ r6))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))] then [(r5 ∩ r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))) ∩ id)",
      "derivation": "Anchor with id: [((r1 ∩ r2)◦((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))◦(r5 ∩ r6))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))] then [(r5 ∩ r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4))◦((r6 ∩ id)◦(r5 ∩ r6)))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦(r3 ∩ r4))] then [((r6 ∩ id)◦(r5 ∩ r6))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4))◦(r5 ∩ ((r6 ∩ id)◦r6)))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦(r3 ∩ r4))] then [(r5 ∩ ((r6 ∩ id)◦r6))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ ((r6 ∩ id)◦r5)))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦(r3 ∩ r4))] then [(r6 ∩ ((r6 ∩ id)◦r5))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))◦(r5 ∩ r6))",
      "derivation": "Concatenation: [((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))] then [(r5 ∩ r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))◦r1⁻) ∩ id)",
      "derivation": "Anchor with id: [((r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))◦r1⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r1⁻) ∩ id)",
      "derivation": "Anchor with id: [((r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r1⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))◦r1⁻) ∩ id)",
      "derivation": "Anchor with id: [((r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))◦r1⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))◦r1⁻) ∩ id)",
      "derivation": "Anchor with id: [((r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))◦r1⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))◦r1⁻) ∩ id)",
      "derivation": "Anchor with id: [((r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))◦r1⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r1⁻) ∩ id)",
      "derivation": "Anchor with id: [((r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r1⁻)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))◦r6) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))◦r6)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))◦r6) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))◦r6)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))◦r6) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))◦r6)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))◦r6) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))◦r6)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))",
      "derivation": "Concatenation: [((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] then [(r1⁻ ∩ r2⁻)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ r6⁻)◦(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ r6⁻)◦((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ r6⁻)◦((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))◦(r1⁻ ∩ r2⁻))",
      "derivation": "Concatenation: [((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))] then [(r1⁻ ∩ r2⁻)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))◦(r1⁻ ∩ r2⁻))",
      "derivation": "Concatenation: [((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))] then [(r1⁻ ∩ r2⁻)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))◦(r1⁻ ∩ r2⁻))",
      "derivation": "Concatenation: [((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))] then [(r1⁻ ∩ r2⁻)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Concatenation: [((r5⁻ ∩ r6⁻)◦(r6 ∩ id))] then [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r5⁻◦(r6 ∩ id))◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)) ∩ id)",
      "derivation": "Anchor with id: [((r5⁻◦(r6 ∩ id))◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))◦r5) ∩ id)",
      "derivation": "Anchor with id: [((r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))◦r5)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))◦r5) ∩ id)",
      "derivation": "Anchor with id: [((r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))◦r5)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))◦r5) ∩ id)",
      "derivation": "Anchor with id: [((r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))◦r5)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))◦r5) ∩ id)",
      "derivation": "Anchor with id: [((r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))◦r5)] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))",
      "derivation": "Concatenation: [((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] then [(r1⁻ ∩ r2⁻)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(((r6⁻◦(r6 ∩ id))◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)) ∩ id)",
      "derivation": "Anchor with id: [((r6⁻◦(r6 ∩ id))◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))◦r2⁻)",
      "derivation": "Concatenation: [(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] then [r2⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r2⁻)",
      "derivation": "Concatenation: [(r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] then [r2⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))◦r2⁻)",
      "derivation": "Concatenation: [(r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] then [r2⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))◦r2⁻)",
      "derivation": "Concatenation: [(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] then [r2⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))◦r2⁻)",
      "derivation": "Concatenation: [(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] then [r2⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r2⁻)",
      "derivation": "Concatenation: [(r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] then [r2⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ r2)◦(((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [(((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ r2)◦((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ r2)◦((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ r2)◦((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1 ∩ r2)◦((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))",
      "derivation": "Concatenation: [(r1 ∩ r2)] then [((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1◦(r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [(r1◦(r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1◦(r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [(r1◦(r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1◦(r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))) ∩ id)",
      "derivation": "Anchor with id: [(r1◦(r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1◦(r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))) ∩ id)",
      "derivation": "Anchor with id: [(r1◦(r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1◦(r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))) ∩ id)",
      "derivation": "Anchor with id: [(r1◦(r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r1◦(r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [(r1◦(r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))◦r1⁻)",
      "derivation": "Concatenation: [(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] then [r1⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r1⁻)",
      "derivation": "Concatenation: [(r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] then [r1⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))◦r1⁻)",
      "derivation": "Concatenation: [(r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] then [r1⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))◦r1⁻)",
      "derivation": "Concatenation: [(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] then [r1⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))◦r1⁻)",
      "derivation": "Concatenation: [(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] then [r1⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))◦r1⁻)",
      "derivation": "Concatenation: [(r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] then [r1⁻] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2◦(r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [(r2◦(r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2◦(r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [(r2◦(r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2◦(r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))) ∩ id)",
      "derivation": "Anchor with id: [(r2◦(r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2◦(r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))) ∩ id)",
      "derivation": "Anchor with id: [(r2◦(r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2◦(r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))) ∩ id)",
      "derivation": "Anchor with id: [(r2◦(r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r2◦(r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))) ∩ id)",
      "derivation": "Anchor with id: [(r2◦(r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))◦r6)",
      "derivation": "Concatenation: [(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))◦r6)",
      "derivation": "Concatenation: [(r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))◦r6)",
      "derivation": "Concatenation: [(r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))◦r6)",
      "derivation": "Concatenation: [(r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Concatenation: [(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))] then [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ r6⁻)◦(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Concatenation: [(r5⁻ ∩ r6⁻)] then [(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ r6⁻)◦((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Concatenation: [(r5⁻ ∩ r6⁻)] then [((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ r6⁻)◦((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Concatenation: [(r5⁻ ∩ r6⁻)] then [((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [(r5⁻ ∩ r6⁻)] then [((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))) ∩ id)",
      "derivation": "Anchor with id: [(r5⁻◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))) ∩ id)",
      "derivation": "Anchor with id: [(r5⁻◦((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦(r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r5⁻◦(r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦(r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r5⁻◦(r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦(r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r5⁻◦(r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦(r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r5⁻◦(r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r5⁻◦(r6 ∩ id))◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))",
      "derivation": "Concatenation: [(r5⁻◦(r6 ∩ id))] then [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))◦r5)",
      "derivation": "Concatenation: [(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] then [r5] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))◦r5)",
      "derivation": "Concatenation: [(r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] then [r5] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))◦r5)",
      "derivation": "Concatenation: [(r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] then [r5] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))◦r5)",
      "derivation": "Concatenation: [(r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] then [r5] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Concatenation: [(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))] then [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))) ∩ id)",
      "derivation": "Anchor with id: [(r6⁻◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))) ∩ id)",
      "derivation": "Anchor with id: [(r6⁻◦((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦(r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r6⁻◦(r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦(r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r6⁻◦(r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦(r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r6⁻◦(r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦(r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r6⁻◦(r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))))] ∩ id at A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "((r6⁻◦(r6 ∩ id))◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))",
      "derivation": "Concatenation: [(r6⁻◦(r6 ∩ id))] then [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r1◦(r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [r1] then [(r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r1◦(r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [r1] then [(r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r1◦(r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))))",
      "derivation": "Concatenation: [r1] then [(r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r1◦(r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))))",
      "derivation": "Concatenation: [r1] then [(r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r1◦(r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))))",
      "derivation": "Concatenation: [r1] then [(r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r1◦(r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [r1] then [(r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r2◦(r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [r2] then [(r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r2◦(r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [r2] then [(r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r2◦(r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))))",
      "derivation": "Concatenation: [r2] then [(r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r2◦(r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))))",
      "derivation": "Concatenation: [r2] then [(r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r2◦(r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))))",
      "derivation": "Concatenation: [r2] then [(r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r2◦(r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Concatenation: [r2] then [(r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r5⁻◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6)))",
      "derivation": "Concatenation: [r5⁻] then [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r5⁻◦((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)))",
      "derivation": "Concatenation: [r5⁻] then [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r5⁻◦(r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [r5⁻] then [(r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r5⁻◦(r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [r5⁻] then [(r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r5⁻◦(r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [r5⁻] then [(r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r5⁻◦(r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))))",
      "derivation": "Concatenation: [r5⁻] then [(r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r6⁻◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5)))",
      "derivation": "Concatenation: [r6⁻] then [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r6⁻◦((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)))",
      "derivation": "Concatenation: [r6⁻] then [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r6⁻◦(r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [r6⁻] then [(r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r6⁻◦(r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [r6⁻] then [(r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r6⁻◦(r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Concatenation: [r6⁻] then [(r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "A",
      "rule": "(r6⁻◦(r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))))",
      "derivation": "Concatenation: [r6⁻] then [(r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "((r1 ∩ r2) ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Intersection: [(r1 ∩ r2)] ∩ [(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "((r1 ∩ r2) ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Intersection: [(r1 ∩ r2)] ∩ [((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "((r1 ∩ r2) ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [(r1 ∩ r2)] ∩ [((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "((r1 ∩ r2) ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))",
      "derivation": "Intersection: [(r1 ∩ r2)] ∩ [((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "((r1 ∩ r2) ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))",
      "derivation": "Intersection: [(r1 ∩ r2)] ∩ [((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "((r1 ∩ r2) ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Intersection: [(r1 ∩ r2)] ∩ [((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [r1] ∩ [(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [r1] ∩ [(r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))))",
      "derivation": "Intersection: [r1] ∩ [(r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))))",
      "derivation": "Intersection: [r1] ∩ [(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))))",
      "derivation": "Intersection: [r1] ∩ [(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r1 ∩ (r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [r1] ∩ [(r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [r2] ∩ [(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [r2] ∩ [(r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))))",
      "derivation": "Intersection: [r2] ∩ [(r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))))",
      "derivation": "Intersection: [r2] ∩ [(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))))",
      "derivation": "Intersection: [r2] ∩ [(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "B",
      "rule": "(r2 ∩ (r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Intersection: [r2] ∩ [(r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] at A→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻) ∩ r6⁻)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻) ∩ r6⁻)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻ ∩ r6⁻))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻ ∩ r6⁻))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻) ∩ (r6⁻◦(r6 ∩ id)))",
      "derivation": "Intersection: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)] ∩ [(r6⁻◦(r6 ∩ id))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻) ∩ (r5⁻◦(r6 ∩ id)))",
      "derivation": "Intersection: [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)] ∩ [(r5⁻◦(r6 ∩ id))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ ((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))",
      "derivation": "Intersection: [((r1 ∩ r2)◦(r3 ∩ r4))] ∩ [((r5⁻ ∩ r6⁻)◦(r6 ∩ id))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻ ∩ (r6⁻◦(r6 ∩ id))))",
      "derivation": "Intersection: [((r1 ∩ r2)◦(r3 ∩ r4))] ∩ [(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻ ∩ (r5⁻◦(r6 ∩ id))))",
      "derivation": "Intersection: [((r1 ∩ r2)◦(r3 ∩ r4))] ∩ [(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((r5⁻ ∩ r6⁻) ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))",
      "derivation": "Intersection: [(r5⁻ ∩ r6⁻)] ∩ [(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((r5⁻ ∩ r6⁻) ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))",
      "derivation": "Intersection: [(r5⁻ ∩ r6⁻)] ∩ [((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((r5⁻ ∩ r6⁻) ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))",
      "derivation": "Intersection: [(r5⁻ ∩ r6⁻)] ∩ [((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "((r5⁻ ∩ r6⁻) ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))",
      "derivation": "Intersection: [(r5⁻ ∩ r6⁻)] ∩ [((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ ((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id)))",
      "derivation": "Intersection: [r5⁻] ∩ [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id))))",
      "derivation": "Intersection: [r5⁻] ∩ [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ (r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))))",
      "derivation": "Intersection: [r5⁻] ∩ [(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ (r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))))",
      "derivation": "Intersection: [r5⁻] ∩ [(r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ (r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r5⁻] ∩ [(r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r5⁻ ∩ (r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r5⁻] ∩ [(r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻ ∩ ((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id)))",
      "derivation": "Intersection: [r6⁻] ∩ [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id))))",
      "derivation": "Intersection: [r6⁻] ∩ [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻ ∩ (r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))))",
      "derivation": "Intersection: [r6⁻] ∩ [(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻ ∩ (r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))))",
      "derivation": "Intersection: [r6⁻] ∩ [(r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻ ∩ (r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r6⁻] ∩ [(r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "A",
      "target": "C",
      "rule": "(r6⁻ ∩ (r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r6⁻] ∩ [(r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] at A→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "((r1⁻ ∩ r2⁻) ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))",
      "derivation": "Intersection: [(r1⁻ ∩ r2⁻)] ∩ [(((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "((r1⁻ ∩ r2⁻) ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))",
      "derivation": "Intersection: [(r1⁻ ∩ r2⁻)] ∩ [((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "((r1⁻ ∩ r2⁻) ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))",
      "derivation": "Intersection: [(r1⁻ ∩ r2⁻)] ∩ [((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "((r1⁻ ∩ r2⁻) ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))",
      "derivation": "Intersection: [(r1⁻ ∩ r2⁻)] ∩ [((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "((r1⁻ ∩ r2⁻) ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))",
      "derivation": "Intersection: [(r1⁻ ∩ r2⁻)] ∩ [((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "((r1⁻ ∩ r2⁻) ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))",
      "derivation": "Intersection: [(r1⁻ ∩ r2⁻)] ∩ [((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r1⁻ ∩ (r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))))",
      "derivation": "Intersection: [r1⁻] ∩ [(r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r1⁻ ∩ (r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Intersection: [r1⁻] ∩ [(r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r1⁻ ∩ (r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))))",
      "derivation": "Intersection: [r1⁻] ∩ [(r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r1⁻ ∩ (r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))))",
      "derivation": "Intersection: [r1⁻] ∩ [(r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r1⁻ ∩ (r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))))",
      "derivation": "Intersection: [r1⁻] ∩ [(r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r1⁻ ∩ (r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Intersection: [r1⁻] ∩ [(r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r2⁻ ∩ (r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))))",
      "derivation": "Intersection: [r2⁻] ∩ [(r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r2⁻ ∩ (r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Intersection: [r2⁻] ∩ [(r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r2⁻ ∩ (r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))))",
      "derivation": "Intersection: [r2⁻] ∩ [(r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r2⁻ ∩ (r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))))",
      "derivation": "Intersection: [r2⁻] ∩ [(r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r2⁻ ∩ (r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))))",
      "derivation": "Intersection: [r2⁻] ∩ [(r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "A",
      "rule": "(r2⁻ ∩ (r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))))",
      "derivation": "Intersection: [r2⁻] ∩ [(r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] at B→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))◦r4⁻) ∩ id)",
      "derivation": "Anchor with id: [((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))◦r4⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))◦r3⁻) ∩ id)",
      "derivation": "Anchor with id: [((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))◦r3⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)) ∩ id)",
      "derivation": "Anchor with id: [((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))◦(r1 ∩ r2)) ∩ id)",
      "derivation": "Anchor with id: [((((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))◦(r1 ∩ r2))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))◦(r3⁻ ∩ r4⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))◦(r3⁻ ∩ r4⁻))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))◦r4⁻)",
      "derivation": "Concatenation: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))] then [r4⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))◦r3⁻)",
      "derivation": "Concatenation: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))] then [r3⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))) ∩ id)",
      "derivation": "Anchor with id: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))) ∩ id)",
      "derivation": "Anchor with id: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))) ∩ id)",
      "derivation": "Anchor with id: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))",
      "derivation": "Concatenation: [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))] then [(r3⁻ ∩ r4⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))◦(r3⁻ ∩ r4⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))◦(r3⁻ ∩ r4⁻))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))◦r4⁻) ∩ id)",
      "derivation": "Anchor with id: [(((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))◦r4⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))◦(r1 ∩ r2)) ∩ id)",
      "derivation": "Anchor with id: [(((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))◦(r1 ∩ r2))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))◦(r1 ∩ r2)) ∩ id)",
      "derivation": "Anchor with id: [(((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))◦(r1 ∩ r2))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))◦(r1 ∩ r2)) ∩ id)",
      "derivation": "Anchor with id: [(((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))◦(r1 ∩ r2))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))◦(r1 ∩ r2)) ∩ id)",
      "derivation": "Anchor with id: [(((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))◦(r1 ∩ r2))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ r4)◦(r6 ∩ id))◦((r5 ∩ r6)◦(r1 ∩ r2))) ∩ id)",
      "derivation": "Anchor with id: [(((r3 ∩ r4)◦(r6 ∩ id))◦((r5 ∩ r6)◦(r1 ∩ r2)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))◦(r1 ∩ r2))",
      "derivation": "Concatenation: [(((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6))] then [(r1 ∩ r2)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))◦r3⁻) ∩ id)",
      "derivation": "Anchor with id: [(((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))◦r3⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))◦(r1 ∩ r2)) ∩ id)",
      "derivation": "Anchor with id: [(((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))◦(r1 ∩ r2))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))◦r2) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))◦r2)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r2) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r2)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))◦r2) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))◦r2)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))◦r2) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))◦r2)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))◦r2) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))◦r2)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r2) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r2)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ r2⁻)◦(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))",
      "derivation": "Concatenation: [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))] then [(r3⁻ ∩ r4⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r1⁻ ∩ r2⁻)◦((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))◦(r3⁻ ∩ r4⁻))",
      "derivation": "Concatenation: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))] then [(r3⁻ ∩ r4⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Concatenation: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] then [((r6 ∩ id)◦(r3⁻ ∩ r4⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))",
      "derivation": "Concatenation: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] then [(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))",
      "derivation": "Concatenation: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] then [(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))◦(r3⁻ ∩ r4⁻))",
      "derivation": "Concatenation: [((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))] then [(r3⁻ ∩ r4⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))◦r1) ∩ id)",
      "derivation": "Anchor with id: [((r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))◦r1)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r1) ∩ id)",
      "derivation": "Anchor with id: [((r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r1)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))◦r1) ∩ id)",
      "derivation": "Anchor with id: [((r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))◦r1)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))◦r1) ∩ id)",
      "derivation": "Anchor with id: [((r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))◦r1)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))◦r1) ∩ id)",
      "derivation": "Anchor with id: [((r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))◦r1)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r1) ∩ id)",
      "derivation": "Anchor with id: [((r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r1)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))◦r4⁻) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))◦r4⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))◦r4⁻) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))◦r4⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))◦r4⁻) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))◦r4⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦((r6 ∩ id)◦r4⁻)) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦((r6 ∩ id)◦r4⁻))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))◦r4⁻)",
      "derivation": "Concatenation: [((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] then [r4⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))◦r4⁻) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))◦r4⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ (r4◦(r6 ∩ id)))◦((r5 ∩ r6)◦(r1 ∩ r2))) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ (r4◦(r6 ∩ id)))◦((r5 ∩ r6)◦(r1 ∩ r2)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))◦(r1 ∩ r2))",
      "derivation": "Concatenation: [((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6))] then [(r1 ∩ r2)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦(((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ r4)◦(((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ r4)◦((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ r4)◦((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [((r3 ∩ r4)◦((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))◦(r1 ∩ r2))",
      "derivation": "Concatenation: [((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6)))] then [(r1 ∩ r2)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))◦(r1 ∩ r2))",
      "derivation": "Concatenation: [((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6)))] then [(r1 ∩ r2)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))◦(r1 ∩ r2))",
      "derivation": "Concatenation: [((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5)))] then [(r1 ∩ r2)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3 ∩ r4)◦(r6 ∩ id))◦((r5 ∩ r6)◦(r1 ∩ r2)))",
      "derivation": "Concatenation: [((r3 ∩ r4)◦(r6 ∩ id))] then [((r5 ∩ r6)◦(r1 ∩ r2))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r3◦(r6 ∩ id))◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [((r3◦(r6 ∩ id))◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))◦r3⁻) ∩ id)",
      "derivation": "Anchor with id: [((r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))◦r3⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))◦r3⁻) ∩ id)",
      "derivation": "Anchor with id: [((r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))◦r3⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))◦r3⁻) ∩ id)",
      "derivation": "Anchor with id: [((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))◦r3⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦((r6 ∩ id)◦r3⁻)) ∩ id)",
      "derivation": "Anchor with id: [((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦((r6 ∩ id)◦r3⁻))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))◦r3⁻)",
      "derivation": "Concatenation: [((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] then [r3⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))◦r3⁻) ∩ id)",
      "derivation": "Anchor with id: [((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))◦r3⁻)] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ (r3◦(r6 ∩ id)))◦((r5 ∩ r6)◦(r1 ∩ r2))) ∩ id)",
      "derivation": "Anchor with id: [((r4 ∩ (r3◦(r6 ∩ id)))◦((r5 ∩ r6)◦(r1 ∩ r2)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))◦(r1 ∩ r2))",
      "derivation": "Concatenation: [((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6))] then [(r1 ∩ r2)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(((r4◦(r6 ∩ id))◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [((r4◦(r6 ∩ id))◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))◦r2)",
      "derivation": "Concatenation: [(r1⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] then [r2] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r2)",
      "derivation": "Concatenation: [(r1⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] then [r2] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))◦r2)",
      "derivation": "Concatenation: [(r1⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] then [r2] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))◦r2)",
      "derivation": "Concatenation: [(r1⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] then [r2] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))◦r2)",
      "derivation": "Concatenation: [(r1⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] then [r2] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r2)",
      "derivation": "Concatenation: [(r1⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] then [r2] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ r2⁻)◦(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Concatenation: [(r1⁻ ∩ r2⁻)] then [(((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Concatenation: [(r1⁻ ∩ r2⁻)] then [((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [(r1⁻ ∩ r2⁻)] then [((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))",
      "derivation": "Concatenation: [(r1⁻ ∩ r2⁻)] then [((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))",
      "derivation": "Concatenation: [(r1⁻ ∩ r2⁻)] then [((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻ ∩ r2⁻)◦((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Concatenation: [(r1⁻ ∩ r2⁻)] then [((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻◦(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r1⁻◦(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻◦(r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r1⁻◦(r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r1⁻◦(r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r1⁻◦(r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))◦r1)",
      "derivation": "Concatenation: [(r2⁻ ∩ (((r3 ∩ r4)◦(r6 ∩ id))◦(r5 ∩ r6)))] then [r1] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r1)",
      "derivation": "Concatenation: [(r2⁻ ∩ ((r3 ∩ (r4◦(r6 ∩ id)))◦(r5 ∩ r6)))] then [r1] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))◦r1)",
      "derivation": "Concatenation: [(r2⁻ ∩ ((r3 ∩ r4)◦((r6 ∩ id)◦(r5 ∩ r6))))] then [r1] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))◦r1)",
      "derivation": "Concatenation: [(r2⁻ ∩ ((r3 ∩ r4)◦(r5 ∩ ((r6 ∩ id)◦r6))))] then [r1] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))◦r1)",
      "derivation": "Concatenation: [(r2⁻ ∩ ((r3 ∩ r4)◦(r6 ∩ ((r6 ∩ id)◦r5))))] then [r1] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))◦r1)",
      "derivation": "Concatenation: [(r2⁻ ∩ ((r4 ∩ (r3◦(r6 ∩ id)))◦(r5 ∩ r6)))] then [r1] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻◦(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r2⁻◦(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻◦(r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r2⁻◦(r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))) ∩ id)",
      "derivation": "Anchor with id: [(r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r2⁻◦(r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(r2⁻◦(r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))◦r4⁻)",
      "derivation": "Concatenation: [(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] then [r4⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))◦r4⁻)",
      "derivation": "Concatenation: [(r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] then [r4⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))◦r4⁻)",
      "derivation": "Concatenation: [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] then [r4⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦((r6 ∩ id)◦r4⁻))",
      "derivation": "Concatenation: [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] then [((r6 ∩ id)◦r4⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))◦r4⁻)",
      "derivation": "Concatenation: [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] then [r4⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ (r4◦(r6 ∩ id)))◦((r5 ∩ r6)◦(r1 ∩ r2)))",
      "derivation": "Concatenation: [(r3 ∩ (r4◦(r6 ∩ id)))] then [((r5 ∩ r6)◦(r1 ∩ r2))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ r4)◦(((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))",
      "derivation": "Concatenation: [(r3 ∩ r4)] then [(((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ r4)◦((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))",
      "derivation": "Concatenation: [(r3 ∩ r4)] then [((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ r4)◦((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))",
      "derivation": "Concatenation: [(r3 ∩ r4)] then [((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3 ∩ r4)◦((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [(r3 ∩ r4)] then [((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))) ∩ id)",
      "derivation": "Anchor with id: [(r3◦(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))) ∩ id)",
      "derivation": "Anchor with id: [(r3◦((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦(r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [(r3◦(r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦(r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [(r3◦(r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦(r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [(r3◦(r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦(r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))) ∩ id)",
      "derivation": "Anchor with id: [(r3◦(r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r3◦(r6 ∩ id))◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [(r3◦(r6 ∩ id))] then [(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))◦r3⁻)",
      "derivation": "Concatenation: [(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] then [r3⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))◦r3⁻)",
      "derivation": "Concatenation: [(r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] then [r3⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))◦r3⁻)",
      "derivation": "Concatenation: [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] then [r3⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦((r6 ∩ id)◦r3⁻))",
      "derivation": "Concatenation: [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] then [((r6 ∩ id)◦r3⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))◦r3⁻)",
      "derivation": "Concatenation: [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] then [r3⁻] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4 ∩ (r3◦(r6 ∩ id)))◦((r5 ∩ r6)◦(r1 ∩ r2)))",
      "derivation": "Concatenation: [(r4 ∩ (r3◦(r6 ∩ id)))] then [((r5 ∩ r6)◦(r1 ∩ r2))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))) ∩ id)",
      "derivation": "Anchor with id: [(r4◦(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻)))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))) ∩ id)",
      "derivation": "Anchor with id: [(r4◦((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦(r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [(r4◦(r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦(r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [(r4◦(r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦(r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))) ∩ id)",
      "derivation": "Anchor with id: [(r4◦(r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦(r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))) ∩ id)",
      "derivation": "Anchor with id: [(r4◦(r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))))] ∩ id at B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "((r4◦(r6 ∩ id))◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [(r4◦(r6 ∩ id))] then [(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r1⁻◦(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [r1⁻] then [(r2 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r1⁻◦(r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [r1⁻] then [(r2 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))))",
      "derivation": "Concatenation: [r1⁻] then [(r2 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))))",
      "derivation": "Concatenation: [r1⁻] then [(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r1⁻◦(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))))",
      "derivation": "Concatenation: [r1⁻] then [(r2 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r1⁻◦(r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [r1⁻] then [(r2 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r2⁻◦(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [r2⁻] then [(r1 ∩ (((r5⁻ ∩ r6⁻)◦(r6 ∩ id))◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r2⁻◦(r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [r2⁻] then [(r1 ∩ ((r5⁻ ∩ (r6⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))))",
      "derivation": "Concatenation: [r2⁻] then [(r1 ∩ ((r5⁻ ∩ r6⁻)◦((r6 ∩ id)◦(r3⁻ ∩ r4⁻))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))))",
      "derivation": "Concatenation: [r2⁻] then [(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r2⁻◦(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))))",
      "derivation": "Concatenation: [r2⁻] then [(r1 ∩ ((r5⁻ ∩ r6⁻)◦(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r2⁻◦(r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻))))",
      "derivation": "Concatenation: [r2⁻] then [(r1 ∩ ((r6⁻ ∩ (r5⁻◦(r6 ∩ id)))◦(r3⁻ ∩ r4⁻)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r3◦(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻)))",
      "derivation": "Concatenation: [r3] then [(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r3◦((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Concatenation: [r3] then [((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r3◦(r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [r3] then [(r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r3◦(r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [r3] then [(r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r3◦(r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [r3] then [(r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r3◦(r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Concatenation: [r3] then [(r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r4◦(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻)))",
      "derivation": "Concatenation: [r4] then [(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r4◦((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Concatenation: [r4] then [((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r4◦(r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [r4] then [(r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r4◦(r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [r4] then [(r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r4◦(r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [r4] then [(r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "B",
      "rule": "(r4◦(r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Concatenation: [r4] then [(r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ ((r3 ∩ r4)◦(r6 ∩ id)))",
      "derivation": "Intersection: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] ∩ [((r3 ∩ r4)◦(r6 ∩ id))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3 ∩ (r4◦(r6 ∩ id))))",
      "derivation": "Intersection: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] ∩ [(r3 ∩ (r4◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4 ∩ (r3◦(r6 ∩ id))))",
      "derivation": "Intersection: [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] ∩ [(r4 ∩ (r3◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(((r3 ∩ r4) ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r3 ∩ r4) ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ (r4◦(r6 ∩ id)))",
      "derivation": "Intersection: [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ [(r4◦(r6 ∩ id))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ (r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r3 ∩ (r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ r4) ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))",
      "derivation": "Intersection: [(r3 ∩ r4)] ∩ [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ r4) ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))",
      "derivation": "Intersection: [(r3 ∩ r4)] ∩ [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ r4) ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))",
      "derivation": "Intersection: [(r3 ∩ r4)] ∩ [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r3 ∩ r4) ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))",
      "derivation": "Intersection: [(r3 ∩ r4)] ∩ [((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ (r3◦(r6 ∩ id)))",
      "derivation": "Intersection: [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ [(r3◦(r6 ∩ id))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "((r4 ∩ (r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r4 ∩ (r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id))))",
      "derivation": "Intersection: [r3] ∩ [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ ((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)))",
      "derivation": "Intersection: [r3] ∩ [((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ (r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))))",
      "derivation": "Intersection: [r3] ∩ [(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ (r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))))",
      "derivation": "Intersection: [r3] ∩ [(r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ (r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r3] ∩ [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r3 ∩ (r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r3] ∩ [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id))))",
      "derivation": "Intersection: [r4] ∩ [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4 ∩ ((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)))",
      "derivation": "Intersection: [r4] ∩ [((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4 ∩ (r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))))",
      "derivation": "Intersection: [r4] ∩ [(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4 ∩ (r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))))",
      "derivation": "Intersection: [r4] ∩ [(r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4 ∩ (r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r4] ∩ [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "B",
      "target": "C",
      "rule": "(r4 ∩ (r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))))",
      "derivation": "Intersection: [r4] ∩ [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] at B→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5) ∩ ((r6 ∩ id)◦r6))",
      "derivation": "Intersection: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)] ∩ [((r6 ∩ id)◦r6)] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6) ∩ ((r6 ∩ id)◦r5))",
      "derivation": "Intersection: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)] ∩ [((r6 ∩ id)◦r5)] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦(r5 ∩ r6)))",
      "derivation": "Intersection: [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] ∩ [((r6 ∩ id)◦(r5 ∩ r6))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ (r5 ∩ ((r6 ∩ id)◦r6)))",
      "derivation": "Intersection: [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] ∩ [(r5 ∩ ((r6 ∩ id)◦r6))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ (r6 ∩ ((r6 ∩ id)◦r5)))",
      "derivation": "Intersection: [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] ∩ [(r6 ∩ ((r6 ∩ id)◦r5))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r5 ∩ r6) ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Intersection: [(r5 ∩ r6)] ∩ [(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r5 ∩ r6) ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Intersection: [(r5 ∩ r6)] ∩ [((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r5 ∩ r6) ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))",
      "derivation": "Intersection: [(r5 ∩ r6)] ∩ [((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r5 ∩ r6) ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [(r5 ∩ r6)] ∩ [((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5) ∩ r6))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5) ∩ r6)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ (r5 ∩ r6)))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ (r5 ∩ r6))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "((r6 ∩ id)◦(r5 ∩ (((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r5 ∩ (((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r5 ∩ (((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6)))",
      "derivation": "Intersection: [r5] ∩ [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r5 ∩ ((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)))",
      "derivation": "Intersection: [r5] ∩ [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r5 ∩ (r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [r5] ∩ [(r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r5 ∩ (r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [r5] ∩ [(r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r5 ∩ (r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [r5] ∩ [(r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r5 ∩ (r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))))",
      "derivation": "Intersection: [r5] ∩ [(r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r6 ∩ (((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5)))",
      "derivation": "Intersection: [r6] ∩ [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r6 ∩ ((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)))",
      "derivation": "Intersection: [r6] ∩ [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r6 ∩ (r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [r6] ∩ [(r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r6 ∩ (r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [r6] ∩ [(r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r6 ∩ (r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))))",
      "derivation": "Intersection: [r6] ∩ [(r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "A",
      "rule": "(r6 ∩ (r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))))",
      "derivation": "Intersection: [r6] ∩ [(r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] at C→A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦(r3⁻ ∩ r4⁻)))",
      "derivation": "Intersection: [((r5 ∩ r6)◦(r1 ∩ r2))] ∩ [((r6 ∩ id)◦(r3⁻ ∩ r4⁻))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ (r3⁻ ∩ ((r6 ∩ id)◦r4⁻)))",
      "derivation": "Intersection: [((r5 ∩ r6)◦(r1 ∩ r2))] ∩ [(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ (r4⁻ ∩ ((r6 ∩ id)◦r3⁻)))",
      "derivation": "Intersection: [((r5 ∩ r6)◦(r1 ∩ r2))] ∩ [(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))) ∩ ((r6 ∩ id)◦r4⁻))",
      "derivation": "Intersection: [(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] ∩ [((r6 ∩ id)◦r4⁻)] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r3⁻ ∩ r4⁻) ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))",
      "derivation": "Intersection: [(r3⁻ ∩ r4⁻)] ∩ [(((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r3⁻ ∩ r4⁻) ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))",
      "derivation": "Intersection: [(r3⁻ ∩ r4⁻)] ∩ [((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r3⁻ ∩ r4⁻) ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))",
      "derivation": "Intersection: [(r3⁻ ∩ r4⁻)] ∩ [((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r3⁻ ∩ r4⁻) ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))",
      "derivation": "Intersection: [(r3⁻ ∩ r4⁻)] ∩ [((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))) ∩ ((r6 ∩ id)◦r3⁻))",
      "derivation": "Intersection: [(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] ∩ [((r6 ∩ id)◦r3⁻)] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r6 ∩ id)◦((r3⁻ ∩ r4⁻) ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r3⁻ ∩ r4⁻) ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r6 ∩ id)◦(r3⁻ ∩ (r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r3⁻ ∩ (r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "((r6 ∩ id)◦(r4⁻ ∩ (r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r4⁻ ∩ (r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r3⁻ ∩ (((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻)))",
      "derivation": "Intersection: [r3⁻] ∩ [(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r3⁻ ∩ ((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Intersection: [r3⁻] ∩ [((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r3⁻ ∩ (r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))))",
      "derivation": "Intersection: [r3⁻] ∩ [(r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r3⁻ ∩ (r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))))",
      "derivation": "Intersection: [r3⁻] ∩ [(r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r3⁻ ∩ (r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))))",
      "derivation": "Intersection: [r3⁻] ∩ [(r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r3⁻ ∩ (r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Intersection: [r3⁻] ∩ [(r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r4⁻ ∩ (((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻)))",
      "derivation": "Intersection: [r4⁻] ∩ [(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r4⁻ ∩ ((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Intersection: [r4⁻] ∩ [((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r4⁻ ∩ (r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))))",
      "derivation": "Intersection: [r4⁻] ∩ [(r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r4⁻ ∩ (r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))))",
      "derivation": "Intersection: [r4⁻] ∩ [(r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r4⁻ ∩ (r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))))",
      "derivation": "Intersection: [r4⁻] ∩ [(r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "B",
      "rule": "(r4⁻ ∩ (r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))))",
      "derivation": "Intersection: [r4⁻] ∩ [(r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] at C→B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id) ∩ r6)",
      "derivation": "Intersection: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)◦r6)",
      "derivation": "Concatenation: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id) ∩ r6)",
      "derivation": "Intersection: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)◦r6)",
      "derivation": "Concatenation: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))◦r6⁻) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))◦r6⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))◦r5⁻) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))◦r5⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦(r6⁻◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦(r6⁻◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ r6)",
      "derivation": "Intersection: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦(r5⁻◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦(r5⁻◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ r6)",
      "derivation": "Intersection: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id) ∩ r6)",
      "derivation": "Intersection: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)◦r6)",
      "derivation": "Concatenation: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))◦r4) ∩ id)",
      "derivation": "Anchor with id: [((((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))◦r4)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))◦r3) ∩ id)",
      "derivation": "Anchor with id: [((((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))◦r3)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id) ∩ r6)",
      "derivation": "Intersection: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)◦r6)",
      "derivation": "Concatenation: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)",
      "derivation": "Anchor with id: [((((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)",
      "derivation": "Anchor with id: [((((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))◦(r3 ∩ r4))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id) ∩ r6)",
      "derivation": "Intersection: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)◦r6)",
      "derivation": "Concatenation: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id) ∩ r6)",
      "derivation": "Intersection: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)◦r6)",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))◦r6⁻)",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r5))] then [r6⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))◦r5⁻)",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ ((r6 ∩ id)◦r6))] then [r5⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦(r6⁻◦(r6 ∩ id)))",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)] then [(r6⁻◦(r6 ∩ id))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦(r5⁻◦(r6 ∩ id)))",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)] then [(r5⁻◦(r6 ∩ id))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ r6)",
      "derivation": "Intersection: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id) ∩ r6)",
      "derivation": "Intersection: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)◦r6)",
      "derivation": "Concatenation: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))◦(r3 ∩ r4))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id) ∩ r6)",
      "derivation": "Intersection: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)◦r6)",
      "derivation": "Concatenation: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))◦r4)",
      "derivation": "Concatenation: [(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r3⁻))] then [r4] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))◦r3)",
      "derivation": "Concatenation: [(((r5 ∩ r6)◦(r1 ∩ r2)) ∩ ((r6 ∩ id)◦r4⁻))] then [r3] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2))◦((r3 ∩ r4)◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ r6)◦(r1 ∩ r2))◦((r3 ∩ r4)◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ (r4◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ (r4◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ r6)",
      "derivation": "Intersection: [(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r5 ∩ r6)◦(r1 ∩ r2))◦(r4 ∩ (r3◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(((r5 ∩ r6)◦(r1 ∩ r2))◦(r4 ∩ (r3◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))◦(r3 ∩ r4))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))◦r6⁻) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))◦r6⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))◦r5⁻) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))◦r5⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))◦(r5⁻ ∩ r6⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))◦(r5⁻ ∩ r6⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))◦(r3 ∩ r4)) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))◦(r3 ∩ r4))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))◦r4) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))◦r4)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))",
      "derivation": "Concatenation: [(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻))] then [(r5⁻ ∩ r6⁻)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))◦r3) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))◦r3)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(r5 ∩ r6))◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦(r5 ∩ r6))◦((r1 ∩ r2)◦(r3 ∩ r4)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))◦(r3 ∩ r4))",
      "derivation": "Concatenation: [(((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2))] then [(r3 ∩ r4)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦r3⁻)◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦r3⁻)◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦r4⁻)◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦r4⁻)◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦r5)◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦r5)◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((((r6 ∩ id)◦r6)◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)",
      "derivation": "Anchor with id: [(((r6 ∩ id)◦r6)◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))◦r4) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))◦r4)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))◦r4) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))◦r4)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦(r4◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦(r4◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ r6)",
      "derivation": "Intersection: [((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))◦r4) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))◦r4)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))◦r4) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))◦r4)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))",
      "derivation": "Concatenation: [((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻))] then [(r5⁻ ∩ r6⁻)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ r4⁻)◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ r6)",
      "derivation": "Intersection: [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))",
      "derivation": "Concatenation: [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] then [((r5⁻ ∩ r6⁻)◦(r6 ∩ id))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))",
      "derivation": "Concatenation: [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] then [(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))",
      "derivation": "Concatenation: [((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))] then [(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id) ∩ r6)",
      "derivation": "Intersection: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)◦r6)",
      "derivation": "Concatenation: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))◦r3) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))◦r3)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))◦r3) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))◦r3)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦(r3◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦(r3◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ r6)",
      "derivation": "Intersection: [((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))◦r3) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))◦r3)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))◦r3) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))◦r3)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))",
      "derivation": "Concatenation: [((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻))] then [(r5⁻ ∩ r6⁻)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id) ∩ r6)",
      "derivation": "Intersection: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)◦r6)",
      "derivation": "Concatenation: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))◦r6⁻) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))◦r6⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ ((r6 ∩ id)◦r6))◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ ((r6 ∩ id)◦r6))◦((r1 ∩ r2)◦(r3 ∩ r4)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))◦(r3 ∩ r4))",
      "derivation": "Concatenation: [((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2))] then [(r3 ∩ r4)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ r6)◦(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ r6)◦((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ r6)",
      "derivation": "Intersection: [((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [((r5 ∩ r6)◦((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦(r1 ∩ r2))◦((r3 ∩ r4)◦(r6 ∩ id)))",
      "derivation": "Concatenation: [((r5 ∩ r6)◦(r1 ∩ r2))] then [((r3 ∩ r4)◦(r6 ∩ id))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ (r4◦(r6 ∩ id))))",
      "derivation": "Concatenation: [((r5 ∩ r6)◦(r1 ∩ r2))] then [(r3 ∩ (r4◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5 ∩ r6)◦(r1 ∩ r2))◦(r4 ∩ (r3◦(r6 ∩ id))))",
      "derivation": "Concatenation: [((r5 ∩ r6)◦(r1 ∩ r2))] then [(r4 ∩ (r3◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id) ∩ r6)",
      "derivation": "Intersection: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)◦r6)",
      "derivation": "Concatenation: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))◦r5⁻) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))◦r5⁻)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ ((r6 ∩ id)◦r5))◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ ((r6 ∩ id)◦r5))◦((r1 ∩ r2)◦(r3 ∩ r4)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))◦(r3 ∩ r4))",
      "derivation": "Concatenation: [((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2))] then [(r3 ∩ r4)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))◦r6⁻)",
      "derivation": "Concatenation: [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5))] then [r6⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))◦r5⁻)",
      "derivation": "Concatenation: [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6))] then [r5⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))◦(r5⁻ ∩ r6⁻))",
      "derivation": "Concatenation: [((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)))] then [(r5⁻ ∩ r6⁻)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))◦(r3 ∩ r4))",
      "derivation": "Concatenation: [((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2)))] then [(r3 ∩ r4)] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))◦r4)",
      "derivation": "Concatenation: [((r6 ∩ id)◦(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] then [r4] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))",
      "derivation": "Concatenation: [((r6 ∩ id)◦(r3⁻ ∩ r4⁻))] then [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))◦r3)",
      "derivation": "Concatenation: [((r6 ∩ id)◦(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2))))] then [r3] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r5 ∩ r6))◦((r1 ∩ r2)◦(r3 ∩ r4)))",
      "derivation": "Concatenation: [((r6 ∩ id)◦(r5 ∩ r6))] then [((r1 ∩ r2)◦(r3 ∩ r4))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))) ∩ id)",
      "derivation": "Anchor with id: [((r6 ∩ id)◦(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦r3⁻)◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))",
      "derivation": "Concatenation: [((r6 ∩ id)◦r3⁻)] then [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦r4⁻)◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))",
      "derivation": "Concatenation: [((r6 ∩ id)◦r4⁻)] then [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦r5)◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))",
      "derivation": "Concatenation: [((r6 ∩ id)◦r5)] then [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6 ∩ id)◦r6)◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))",
      "derivation": "Concatenation: [((r6 ∩ id)◦r6)] then [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ (r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ (r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id) ∩ r6)",
      "derivation": "Intersection: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)◦(r6 ∩ id))",
      "derivation": "Concatenation: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)◦r6)",
      "derivation": "Concatenation: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)] then [r6] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ r6) ∩ id)",
      "derivation": "Anchor with id: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ r6)] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))◦(r6 ∩ id)) ∩ id)",
      "derivation": "Anchor with id: [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))◦(r6 ∩ id))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))◦r4)",
      "derivation": "Concatenation: [(r3⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] then [r4] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))◦r4)",
      "derivation": "Concatenation: [(r3⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] then [r4] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦(r4◦(r6 ∩ id)))",
      "derivation": "Concatenation: [(r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] then [(r4◦(r6 ∩ id))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))◦r4)",
      "derivation": "Concatenation: [(r3⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] then [r4] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))◦r4)",
      "derivation": "Concatenation: [(r3⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] then [r4] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))",
      "derivation": "Concatenation: [(r3⁻ ∩ ((r6 ∩ id)◦r4⁻))] then [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ r4⁻)◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))",
      "derivation": "Concatenation: [(r3⁻ ∩ r4⁻)] then [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))",
      "derivation": "Concatenation: [(r3⁻ ∩ r4⁻)] then [((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [(r3⁻ ∩ r4⁻)] then [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [(r3⁻ ∩ r4⁻)] then [((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r3⁻◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [(r3⁻◦((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r3⁻◦(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ r6)",
      "derivation": "Intersection: [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))◦r3)",
      "derivation": "Concatenation: [(r4⁻ ∩ (((r6 ∩ id)◦(r5 ∩ r6))◦(r1 ∩ r2)))] then [r3] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))◦r3)",
      "derivation": "Concatenation: [(r4⁻ ∩ ((r5 ∩ ((r6 ∩ id)◦r6))◦(r1 ∩ r2)))] then [r3] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦(r3◦(r6 ∩ id)))",
      "derivation": "Concatenation: [(r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))] then [(r3◦(r6 ∩ id))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))◦r3)",
      "derivation": "Concatenation: [(r4⁻ ∩ ((r6 ∩ ((r6 ∩ id)◦r5))◦(r1 ∩ r2)))] then [r3] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))◦r3)",
      "derivation": "Concatenation: [(r4⁻ ∩ ((r6 ∩ id)◦((r5 ∩ r6)◦(r1 ∩ r2))))] then [r3] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))",
      "derivation": "Concatenation: [(r4⁻ ∩ ((r6 ∩ id)◦r3⁻))] then [((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r4⁻◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [(r4⁻◦((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r4⁻◦(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ r6)",
      "derivation": "Intersection: [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻)",
      "derivation": "Concatenation: [(r5 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] then [r6⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻)",
      "derivation": "Concatenation: [(r5 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] then [r6⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))◦r6⁻)",
      "derivation": "Concatenation: [(r5 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] then [r6⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))◦r6⁻)",
      "derivation": "Concatenation: [(r5 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] then [r6⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ ((r6 ∩ id)◦r6))◦((r1 ∩ r2)◦(r3 ∩ r4)))",
      "derivation": "Concatenation: [(r5 ∩ ((r6 ∩ id)◦r6))] then [((r1 ∩ r2)◦(r3 ∩ r4))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ r6)◦(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))",
      "derivation": "Concatenation: [(r5 ∩ r6)] then [(((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ r6)◦((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))",
      "derivation": "Concatenation: [(r5 ∩ r6)] then [((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [(r5 ∩ r6)] then [((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5 ∩ r6)◦((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [(r5 ∩ r6)] then [((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [(r5◦((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ r6)",
      "derivation": "Intersection: [(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r5◦(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [(r5◦(r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r5◦(r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r5◦(r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r5◦(r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻)",
      "derivation": "Concatenation: [(r6 ∩ (((r6 ∩ id)◦(r3⁻ ∩ r4⁻))◦(r1⁻ ∩ r2⁻)))] then [r5⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻)",
      "derivation": "Concatenation: [(r6 ∩ ((r3⁻ ∩ ((r6 ∩ id)◦r4⁻))◦(r1⁻ ∩ r2⁻)))] then [r5⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))◦r5⁻)",
      "derivation": "Concatenation: [(r6 ∩ ((r4⁻ ∩ ((r6 ∩ id)◦r3⁻))◦(r1⁻ ∩ r2⁻)))] then [r5⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))◦r5⁻)",
      "derivation": "Concatenation: [(r6 ∩ ((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))))] then [r5⁻] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ ((r6 ∩ id)◦r5))◦((r1 ∩ r2)◦(r3 ∩ r4)))",
      "derivation": "Concatenation: [(r6 ∩ ((r6 ∩ id)◦r5))] then [((r1 ∩ r2)◦(r3 ∩ r4))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4)))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6 ∩ id)◦(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)))",
      "derivation": "Concatenation: [(r6 ∩ id)] then [(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))) ∩ id)",
      "derivation": "Anchor with id: [(r6◦((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id)))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ (r6 ∩ id))",
      "derivation": "Intersection: [(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))] ∩ [(r6 ∩ id)] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ r6)",
      "derivation": "Intersection: [(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))] ∩ [r6] at C→C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))◦(r6 ∩ id))",
      "derivation": "Concatenation: [(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻))] then [(r6 ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))) ∩ id)",
      "derivation": "Anchor with id: [(r6◦(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))) ∩ id)",
      "derivation": "Anchor with id: [(r6◦(r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r6◦(r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "((r6◦(r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))) ∩ id)",
      "derivation": "Anchor with id: [(r6◦(r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))))] ∩ id at C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r3⁻◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r3⁻] then [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r4◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r3⁻◦((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)))",
      "derivation": "Concatenation: [r3⁻] then [((r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r3⁻◦(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r3⁻] then [(r4 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [r3⁻] then [(r4 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r3⁻] then [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r3⁻] then [(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r4⁻◦(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r4⁻] then [(((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)) ∩ (r3◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r4⁻◦((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id)))",
      "derivation": "Concatenation: [r4⁻] then [((r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))◦(r6 ∩ id))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r4⁻◦(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r4⁻] then [(r3 ∩ (((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))◦(r6 ∩ id)))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [r4⁻] then [(r3 ∩ ((r1⁻ ∩ r2⁻)◦((r5⁻ ∩ r6⁻)◦(r6 ∩ id))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r4⁻] then [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ (r6⁻◦(r6 ∩ id)))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r4⁻] then [(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r6⁻ ∩ (r5⁻◦(r6 ∩ id)))))] via B"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r5◦((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id)))",
      "derivation": "Concatenation: [r5] then [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)◦(r6 ∩ id))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r5] then [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r6⁻◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r5◦(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r5] then [(r6⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r5◦(r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [r5] then [(r6⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r5◦(r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r5] then [(r6⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r5◦(r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r5] then [(r6⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id))",
      "derivation": "Concatenation: [r6] then [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r5)◦r6⁻) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id))",
      "derivation": "Concatenation: [r6] then [(((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻)) ∩ r6)◦r5⁻) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id)))",
      "derivation": "Concatenation: [r6] then [((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id))",
      "derivation": "Concatenation: [r6] then [((((r3⁻ ∩ r4⁻)◦(r1⁻ ∩ r2⁻))◦(r5⁻ ∩ r6⁻)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id))",
      "derivation": "Concatenation: [r6] then [((((r5 ∩ r6)◦(r1 ∩ r2))◦(r3 ∩ r4)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r6] then [(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ (r5⁻◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id))",
      "derivation": "Concatenation: [r6] then [(((r3⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r4) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id))",
      "derivation": "Concatenation: [r6] then [(((r3⁻ ∩ r4⁻)◦((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id))",
      "derivation": "Concatenation: [r6] then [(((r4⁻ ∩ ((r5 ∩ r6)◦(r1 ∩ r2)))◦r3) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id))",
      "derivation": "Concatenation: [r6] then [(((r5 ∩ r6)◦((r1 ∩ r2)◦(r3 ∩ r4))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id))",
      "derivation": "Concatenation: [r6] then [((r3⁻◦(r4 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id))",
      "derivation": "Concatenation: [r6] then [((r4⁻◦(r3 ∩ ((r1⁻ ∩ r2⁻)◦(r5⁻ ∩ r6⁻)))) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id))",
      "derivation": "Concatenation: [r6] then [((r5◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r6⁻)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id))",
      "derivation": "Concatenation: [r6] then [((r6◦(((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)) ∩ id)] via C"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id))))",
      "derivation": "Concatenation: [r6] then [(r5⁻ ∩ (((r1 ∩ r2)◦(r3 ∩ r4))◦(r6 ∩ id)))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id)))))",
      "derivation": "Concatenation: [r6] then [(r5⁻ ∩ ((r1 ∩ r2)◦((r3 ∩ r4)◦(r6 ∩ id))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r6] then [(r5⁻ ∩ ((r1 ∩ r2)◦(r3 ∩ (r4◦(r6 ∩ id)))))] via A"
    },
    {
      "edges": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "source": "C",
      "target": "C",
      "rule": "(r6◦(r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id))))))",
      "derivation": "Concatenation: [r6] then [(r5⁻ ∩ ((r1 ∩ r2)◦(r4 ∩ (r3◦(r6 ∩ id)))))] via A"
    }
  ],
  "diagnostics": [
    "Partition#6 rejected: component had \u003e2 join nodes",
    "Partition#7 rejected: component had \u003e2 join nodes",
    "Partition#8 rejected: component had \u003e2 join nodes",
    "Partition#9 rejected: component had \u003e2 join nodes",
    "Partition#10 rejected: component had \u003e2 join nodes",
    "Partition#11 rejected: component had \u003e2 join nodes",
    "Partition#12 rejected: component had \u003e2 join nodes",
    "Partition#13 rejected: component had \u003e2 join nodes",
    "Partition#21 rejected: component had \u003e2 join nodes",
    "Partition#22 rejected: component had \u003e2 join nodes",
    "Partition#23 rejected: component had \u003e2 join nodes",
    "Partition#25 rejected: component had \u003e2 join nodes",
    "Partition#26 rejected: component had \u003e2 join nodes",
    "Partition#27 rejected: component had \u003e2 join nodes",
    "Partition#28 rejected: component had \u003e2 join nodes",
    "Partition#31 rejected: component had \u003e2 join nodes",
    "Partition#32 rejected: component had \u003e2 join nodes",
    "Partition#33 rejected: component had \u003e2 join nodes",
    "Partition#34 rejected: component had \u003e2 join nodes",
    "Partition#35 rejected: component had \u003e2 join nodes",
    "Partition#36 rejected: component had \u003e2 join nodes",
    "Partition#37 rejected: component had \u003e2 join nodes",
    "Partition#38 rejected: component had \u003e2 join nodes",
    "Partition#39 rejected: component had \u003e2 join nodes",
    "Partition#40 rejected: component had \u003e2 join nodes",
    "Partition#41 rejected: component had \u003e2 join nodes",
    "Partition#42 rejected: component had \u003e2 join nodes",
    "Partition#43 rejected: component had \u003e2 join nodes",
    "Partition#44 rejected: component had \u003e2 join nodes",
    "Partition#45 rejected: component had \u003e2 join nodes",
    "Partition#46 rejected: component had \u003e2 join nodes",
    "Partition#47 rejected: component had \u003e2 join nodes",
    "Partition#50 rejected: component had \u003e2 join nodes",
    "Partition#51 rejected: component had \u003e2 join nodes",
    "Partition#52 rejected: component had \u003e2 join nodes",
    "Partition#53 rejected: component had \u003e2 join nodes",
    "Partition#54 rejected: component had \u003e2 join nodes",
    "Partition#55 rejected: component had \u003e2 join nodes",
    "Partition#56 rejected: component had \u003e2 join nodes",
    "Partition#57 rejected: component had \u003e2 join nodes",
    "Partition#58 rejected: component had \u003e2 join nodes",
    "Partition#59 rejected: component had \u003e2 join nodes",
    "Partition#60 rejected: component had \u003e2 join nodes",
    "Partition#61 rejected: component had \u003e2 join nodes",
    "Partition#62 rejected: component had \u003e2 join nodes",
    "Partition#63 rejected: component had \u003e2 join nodes",
    "Partition#64 rejected: component had \u003e2 join nodes",
    "Partition#65 rejected: component had \u003e2 join nodes",
    "Partition#66 rejected: component had \u003e2 join nodes",
    "Partition#67 rejected: component had \u003e2 join nodes",
    "Partition#68 rejected: component had \u003e2 join nodes",
    "Partition#69 rejected: component had \u003e2 join nodes",
    "Partition#70 rejected: component had \u003e2 join nodes",
    "Partition#71 rejected: component had \u003e2 join nodes",
    "Partition#72 rejected: component had \u003e2 join nodes",
    "Partition#73 rejected: component had \u003e2 join nodes",
    "Partition#74 rejected: component had \u003e2 join nodes",
    "Partition#75 rejected: component had \u003e2 join nodes",
    "Partition#77 rejected: component had \u003e2 join nodes",
    "Partition#78 rejected: component had \u003e2 join nodes",
    "Partition#79 rejected: component had \u003e2 join nodes",
    "Partition#80 rejected: component had \u003e2 join nodes",
    "Partition#81 rejected: component had \u003e2 join nodes",
    "Partition#82 rejected: component had \u003e2 join nodes",
    "Partition#83 rejected: component had \u003e2 join nodes",
    "Partition#84 rejected: component had \u003e2 join nodes",
    "Partition#85 rejected: component had \u003e2 join nodes",
    "Partition#86 rejected: component had \u003e2 join nodes",
    "Partition#87 rejected: component had \u003e2 join nodes",
    "Partition#88 rejected: component had \u003e2 join nodes",
    "Partition#89 rejected: component had \u003e2 join nodes",
    "Partition#90 rejected: component had \u003e2 join nodes",
    "Partition#91 rejected: component had \u003e2 join nodes",
    "Partition#92 rejected: component had \u003e2 join nodes",
    "Partition#93 rejected: component had \u003e2 join nodes",
    "Partition#94 rejected: component had \u003e2 join nodes",
    "Partition#95 rejected: component had \u003e2 join nodes",
    "Partition#96 rejected: component had \u003e2 join nodes",
    "Partition#97 rejected: component had \u003e2 join nodes",
    "Partition#98 rejected: component had \u003e2 join nodes",
    "Partition#99 rejected: component had \u003e2 join nodes",
    "Partition#100 rejected: component had \u003e2 join nodes",
    "Partition#101 rejected: component had \u003e2 join nodes",
    "Partition#102 rejected: component had \u003e2 join nodes",
    "Partition#103 rejected: component had \u003e2 join nodes",
    "Partition#104 rejected: component had \u003e2 join nodes",
    "Partition#105 rejected: component had \u003e2 join nodes",
    "Partition#106 rejected: component had \u003e2 join nodes",
    "Partition#107 rejected: component had \u003e2 join nodes",
    "Partition#108 rejected: component had \u003e2 join nodes",
    "Partition#109 rejected: component had \u003e2 join nodes",
    "Partition#110 rejected: component had \u003e2 join nodes",
    "Partition#111 rejected: component had \u003e2 join nodes",
    "Partition#112 rejected: component had \u003e2 join nodes",
    "Partition#113 rejected: component had \u003e2 join nodes",
    "Partition#114 rejected: component had \u003e2 join nodes",
    "Partition#115 rejected: component had \u003e2 join nodes",
    "Partition#116 rejected: component had \u003e2 join nodes",
    "Partition#117 rejected: component had \u003e2 join nodes",
    "Partition#118 rejected: component had \u003e2 join nodes",
    "Partition#119 rejected: component had \u003e2 join nodes",
    "Partition#120 rejected: component had \u003e2 join nodes",
    "Partition#121 rejected: component had \u003e2 join nodes",
    "Partition#122 rejected: component had \u003e2 join nodes",
    "Partition#123 rejected: component had \u003e2 join nodes",
    "Partition#124 rejected: component had \u003e2 join nodes",
    "Partition#125 rejected: component had \u003e2 join nodes",
    "Partition#126 rejected: component had \u003e2 join nodes",
    "Partition#127 rejected: component had \u003e2 join nodes",
    "Partition#128 rejected: component had \u003e2 join nodes",
    "Partition#129 rejected: component had \u003e2 join nodes",
    "Partition#130 rejected: component had \u003e2 join nodes",
    "Partition#131 rejected: component had \u003e2 join nodes",
    "Partition#132 rejected: component had \u003e2 join nodes",
    "Partition#133 rejected: component had \u003e2 join nodes",
    "Partition#134 rejected: component had \u003e2 join nodes",
    "Partition#135 rejected: component had \u003e2 join nodes",
    "Partition#136 rejected: component had \u003e2 join nodes",
    "Partition#137 rejected: component had \u003e2 join nodes",
    "Partition#138 rejected: component had \u003e2 join nodes",
    "Partition#139 rejected: component had \u003e2 join nodes",
    "Partition#140 rejected: component had \u003e2 join nodes",
    "Partition#141 rejected: component had \u003e2 join nodes",
    "Partition#142 rejected: component had \u003e2 join nodes",
    "Partition#143 rejected: component had \u003e2 join nodes",
    "Partition#144 rejected: component had \u003e2 join nodes",
    "Partition#145 rejected: component had \u003e2 join nodes",
    "Partition#146 rejected: component had \u003e2 join nodes",
    "Partition#147 rejected: component had \u003e2 join nodes",
    "Partition#148 rejected: component had \u003e2 join nodes",
    "Partition#149 rejected: component had \u003e2 join nodes",
    "Partition#150 rejected: component had \u003e2 join nodes",
    "Partition#151 rejected: component had \u003e2 join nodes",
    "Partition#152 rejected: component had \u003e2 join nodes",
    "Partition#153 rejected: component had \u003e2 join nodes",
    "Partition#154 rejected: component had \u003e2 join nodes",
    "Partition#155 rejected: component had \u003e2 join nodes",
    "Partition#156 rejected: component had \u003e2 join nodes",
    "Partition#157 rejected: component had \u003e2 join nodes",
    "Partition#158 rejected: component had \u003e2 join nodes",
    "Partition#159 rejected: component had \u003e2 join nodes",
    "Partition#160 rejected: component had \u003e2 join nodes",
    "Partition#161 rejected: component had \u003e2 join nodes",
    "Partition#162 rejected: component had \u003e2 join nodes",
    "Partition#163 rejected: component had \u003e2 join nodes",
    "Partition#164 rejected: component had \u003e2 join nodes",
    "Partition#165 rejected: component had \u003e2 join nodes",
    "Partition#166 rejected: component had \u003e2 join nodes",
    "Partition#167 rejected: component had \u003e2 join nodes",
    "Partition#168 rejected: component had \u003e2 join nodes",
    "Partition#169 rejected: component had \u003e2 join nodes",
    "Partition#170 rejected: component had \u003e2 join nodes",
    "Partition#171 rejected: component had \u003e2 join nodes",
    "Partition#172 rejected: component had \u003e2 join nodes",
    "Partition#173 rejected: component had \u003e2 join nodes",
    "Partition#174 rejected: component had \u003e2 join nodes",
    "Partition#175 rejected: component had \u003e2 join nodes",
    "Partition#176 rejected: component had \u003e2 join nodes",
    "Partition#177 rejected: component had \u003e2 join nodes",
    "Partition#178 rejected: component had \u003e2 join nodes",
    "Partition#179 rejected: component had \u003e2 join nodes",
    "Partition#180 rejected: component had \u003e2 join nodes",
    "Partition#181 rejected: component had \u003e2 join nodes",
    "Partition#182 rejected: component had \u003e2 join nodes",
    "Partition#183 rejected: component had \u003e2 join nodes",
    "Partition#184 rejected: component had \u003e2 join nodes",
    "Partition#185 rejected: component had \u003e2 join nodes",
    "Partition#186 rejected: component had \u003e2 join nodes",
    "Partition#187 rejected: component had \u003e2 join nodes",
    "Partition#188 rejected: component had \u003e2 join nodes",
    "Partition#194 rejected: component had \u003e2 join nodes",
    "Partition#195 rejected: component had \u003e2 join nodes",
    "Partition#196 rejected: component had \u003e2 join nodes",
    "Partition#197 rejected: component had \u003e2 join nodes",
    "Partition#198 rejected: component had \u003e2 join nodes",
    "Partition#199 rejected: component had \u003e2 join nodes",
    "Partition#200 rejected: component had \u003e2 join nodes",
    "Partition#201 rejected: component had \u003e2 join nodes",
    "Partition#209 rejected: component had \u003e2 join nodes",
    "Partition#210 rejected: component had \u003e2 join nodes",
    "Partition#211 rejected: component had \u003e2 join nodes",
    "Partition#213 rejected: component had \u003e2 join nodes",
    "Partition#214 rejected: component had \u003e2 join nodes",
    "Partition#215 rejected: component had \u003e2 join nodes",
    "Partition#216 rejected: component had \u003e2 join nodes",
    "Partition#219 rejected: component had \u003e2 join nodes",
    "Partition#220 rejected: component had \u003e2 join nodes",
    "Partition#221 rejected: component had \u003e2 join nodes",
    "Partition#222 rejected: component had \u003e2 join nodes",
    "Partition#223 rejected: component had \u003e2 join nodes",
    "Partition#224 rejected: component had \u003e2 join nodes",
    "Partition#225 rejected: component had \u003e2 join nodes",
    "Partition#226 rejected: component had \u003e2 join nodes",
    "Partition#227 rejected: component had \u003e2 join nodes",
    "Partition#228 rejected: component had \u003e2 join nodes",
    "Partition#229 rejected: component had \u003e2 join nodes",
    "Partition#230 rejected: component had \u003e2 join nodes",
    "Partition#231 rejected: component had \u003e2 join nodes",
    "Partition#232 rejected: component had \u003e2 join nodes",
    "Partition#233 rejected: component had \u003e2 join nodes",
    "Partition#234 rejected: component had \u003e2 join nodes",
    "Partition#235 rejected: component had \u003e2 join nodes",
    "Partition#238 rejected: component had \u003e2 join nodes",
    "Partition#239 rejected: component had \u003e2 join nodes",
    "Partition#240 rejected: component had \u003e2 join nodes",
    "Partition#241 rejected: component had \u003e2 join nodes",
    "Partition#242 rejected: component had \u003e2 join nodes",
    "Partition#243 rejected: component had \u003e2 join nodes",
    "Partition#244 rejected: component had \u003e2 join nodes",
    "Partition#245 rejected: component had \u003e2 join nodes",
    "Partition#246 rejected: component had \u003e2 join nodes",
    "Partition#247 rejected: component had \u003e2 join nodes",
    "Partition#248 rejected: component had \u003e2 join nodes",
    "Partition#249 rejected: component had \u003e2 join nodes",
    "Partition#250 rejected: component had \u003e2 join nodes",
    "Partition#251 rejected: component had \u003e2 join nodes",
    "Partition#252 rejected: component had \u003e2 join nodes",
    "Partition#253 rejected: component had \u003e2 join nodes",
    "Partition#254 rejected: component had \u003e2 join nodes",
    "Partition#255 rejected: component had \u003e2 join nodes",
    "Partition#263 rejected: free var A not a join node",
    "Partition#271 rejected: component had \u003e2 join nodes",
    "Partition#272 rejected: component had \u003e2 join nodes",
    "Partition#273 rejected: component had \u003e2 join nodes",
    "Partition#274 rejected: component had \u003e2 join nodes",
    "Partition#275 rejected: component had \u003e2 join nodes",
    "Partition#276 rejected: free var A not a join node",
    "Partition#277 rejected: free var A not a join node",
    "Partition#278 rejected: free var A not a join node",
    "Partition#279 rejected: component had \u003e2 join nodes",
    "Partition#280 rejected: component had \u003e2 join nodes",
    "Partition#281 rejected: component had \u003e2 join nodes",
    "Partition#282 rejected: component had \u003e2 join nodes",
    "Partition#283 rejected: component had \u003e2 join nodes",
    "Partition#284 rejected: component had \u003e2 join nodes",
    "Partition#285 rejected: component had \u003e2 join nodes",
    "Partition#286 rejected: component had \u003e2 join nodes",
    "Partition#287 rejected: component had \u003e2 join nodes",
    "Partition#288 rejected: component had \u003e2 join nodes",
    "Partition#289 rejected: component had \u003e2 join nodes",
    "Partition#290 rejected: component had \u003e2 join nodes",
    "Partition#291 rejected: component had \u003e2 join nodes",
    "Partition#292 rejected: component had \u003e2 join nodes",
    "Partition#293 rejected: component had \u003e2 join nodes",
    "Partition#294 rejected: component had \u003e2 join nodes",
    "Partition#295 rejected: component had \u003e2 join nodes",
    "Partition#296 rejected: component had \u003e2 join nodes",
    "Partition#297 rejected: component had \u003e2 join nodes",
    "Partition#298 rejected: component had \u003e2 join nodes",
    "Partition#299 rejected: component had \u003e2 join nodes",
    "Partition#300 rejected: component had \u003e2 join nodes",
    "Partition#301 rejected: component had \u003e2 join nodes",
    "Partition#302 rejected: component had \u003e2 join nodes",
    "Partition#303 rejected: component had \u003e2 join nodes",
    "Partition#304 rejected: component had \u003e2 join nodes",
    "Partition#305 rejected: component had \u003e2 join nodes",
    "Partition#306 rejected: component had \u003e2 join nodes",
    "Partition#307 rejected: component had \u003e2 join nodes",
    "Partition#308 rejected: component had \u003e2 join nodes",
    "Partition#309 rejected: component had \u003e2 join nodes",
    "Partition#310 rejected: component had \u003e2 join nodes",
    "Partition#311 rejected: component had \u003e2 join nodes",
    "Partition#312 rejected: component had \u003e2 join nodes",
    "Partition#313 rejected: free var A not a join node",
    "Partition#314 rejected: free var A not a join node",
    "Partition#315 rejected: free var A not a join node",
    "Partition#316 rejected: component had \u003e2 join nodes",
    "Partition#317 rejected: component had \u003e2 join nodes",
    "Partition#318 rejected: component had \u003e2 join nodes",
    "Partition#319 rejected: component had \u003e2 join nodes",
    "Partition#320 rejected: component had \u003e2 join nodes",
    "Partition#321 rejected: component had \u003e2 join nodes",
    "Partition#322 rejected: component had \u003e2 join nodes",
    "Partition#323 rejected: component had \u003e2 join nodes",
    "Partition#324 rejected: component had \u003e2 join nodes",
    "Partition#325 rejected: component had \u003e2 join nodes",
    "Partition#326 rejected: component had \u003e2 join nodes",
    "Partition#327 rejected: component had \u003e2 join nodes",
    "Partition#328 rejected: component had \u003e2 join nodes",
    "Partition#329 rejected: component had \u003e2 join nodes",
    "Partition#330 rejected: component had \u003e2 join nodes",
    "Partition#331 rejected: component had \u003e2 join nodes",
    "Partition#332 rejected: component had \u003e2 join nodes",
    "Partition#333 rejected: component had \u003e2 join nodes",
    "Partition#334 rejected: component had \u003e2 join nodes",
    "Partition#335 rejected: component had \u003e2 join nodes",
    "Partition#336 rejected: component had \u003e2 join nodes",
    "Partition#337 rejected: component had \u003e2 join nodes",
    "Partition#338 rejected: component had \u003e2 join nodes",
    "Partition#339 rejected: component had \u003e2 join nodes",
    "Partition#340 rejected: component had \u003e2 join nodes",
    "Partition#341 rejected: component had \u003e2 join nodes",
    "Partition#342 rejected: component had \u003e2 join nodes",
    "Partition#343 rejected: component had \u003e2 join nodes",
    "Partition#344 rejected: component had \u003e2 join nodes",
    "Partition#345 rejected: free var A not a join node",
    "Partition#346 rejected: free var A not a join node",
    "Partition#347 rejected: free var A not a join node",
    "Partition#348 rejected: free var A not a join node",
    "Partition#349 rejected: free var A not a join node",
    "Partition#350 rejected: free var A not a join node",
    "Partition#351 rejected: free var A not a join node",
    "Partition#352 rejected: component had \u003e2 join nodes",
    "Partition#353 rejected: component had \u003e2 join nodes",
    "Partition#354 rejected: component had \u003e2 join nodes",
    "Partition#355 rejected: component had \u003e2 join nodes",
    "Partition#356 rejected: component had \u003e2 join nodes",
    "Partition#357 rejected: component had \u003e2 join nodes",
    "Partition#358 rejected: component had \u003e2 join nodes",
    "Partition#359 rejected: component had \u003e2 join nodes",
    "Partition#360 rejected: component had \u003e2 join nodes",
    "Partition#361 rejected: component had \u003e2 join nodes",
    "Partition#362 rejected: component had \u003e2 join nodes",
    "Partition#363 rejected: component had \u003e2 join nodes",
    "Partition#364 rejected: component had \u003e2 join nodes",
    "Partition#365 rejected: component had \u003e2 join nodes",
    "Partition#366 rejected: component had \u003e2 join nodes",
    "Partition#367 rejected: component had \u003e2 join nodes",
    "Partition#368 rejected: component had \u003e2 join nodes",
    "Partition#369 rejected: component had \u003e2 join nodes",
    "Partition#370 rejected: component had \u003e2 join nodes",
    "Partition#371 rejected: component had \u003e2 join nodes",
    "Partition#372 rejected: component had \u003e2 join nodes",
    "Partition#373 rejected: component had \u003e2 join nodes",
    "Partition#374 rejected: component had \u003e2 join nodes",
    "Partition#375 rejected: component had \u003e2 join nodes",
    "Partition#376 rejected: component had \u003e2 join nodes",
    "Partition#377 rejected: component had \u003e2 join nodes",
    "Partition#378 rejected: component had \u003e2 join nodes",
    "Partition#379 rejected: component had \u003e2 join nodes",
    "Partition#380 rejected: component had \u003e2 join nodes",
    "Partition#381 rejected: component had \u003e2 join nodes",
    "Partition#382 rejected: component had \u003e2 join nodes",
    "Partition#383 rejected: component had \u003e2 join nodes",
    "Partition#384 rejected: component had \u003e2 join nodes",
    "Partition#385 rejected: component had \u003e2 join nodes",
    "Partition#386 rejected: component had \u003e2 join nodes",
    "Partition#387 rejected: component had \u003e2 join nodes",
    "Partition#388 rejected: component had \u003e2 join nodes",
    "Partition#389 rejected: component had \u003e2 join nodes",
    "Partition#390 rejected: component had \u003e2 join nodes",
    "Partition#391 rejected: component had \u003e2 join nodes",
    "Partition#392 rejected: component had \u003e2 join nodes",
    "Partition#393 rejected: component had \u003e2 join nodes",
    "Partition#394 rejected: component had \u003e2 join nodes",
    "Partition#395 rejected: component had \u003e2 join nodes",
    "Partition#396 rejected: component had \u003e2 join nodes",
    "Partition#397 rejected: component had \u003e2 join nodes",
    "Partition#398 rejected: component had \u003e2 join nodes",
    "Partition#399 rejected: component had \u003e2 join nodes",
    "Partition#400 rejected: component had \u003e2 join nodes",
    "Partition#401 rejected: component had \u003e2 join nodes",
    "Partition#402 rejected: component had \u003e2 join nodes",
    "Partition#403 rejected: component had \u003e2 join nodes",
    "Partition#404 rejected: component had \u003e2 join nodes",
    "Partition#405 rejected: component had \u003e2 join nodes",
    "Partition#406 rejected: component had \u003e2 join nodes",
    "Partition#407 rejected: component had \u003e2 join nodes",
    "Partition#408 rejected: component had \u003e2 join nodes",
    "Partition#409 rejected: component had \u003e2 join nodes",
    "Partition#410 rejected: component had \u003e2 join nodes",
    "Partition#411 rejected: component had \u003e2 join nodes",
    "Partition#412 rejected: component had \u003e2 join nodes",
    "Partition#413 rejected: component had \u003e2 join nodes",
    "Partition#414 rejected: component had \u003e2 join nodes",
    "Partition#415 rejected: component had \u003e2 join nodes",
    "Partition#416 rejected: component had \u003e2 join nodes",
    "Partition#417 rejected: component had \u003e2 join nodes",
    "Partition#418 rejected: component had \u003e2 join nodes",
    "Partition#419 rejected: component had \u003e2 join nodes",
    "Partition#420 rejected: component had \u003e2 join nodes",
    "Partition#421 rejected: component had \u003e2 join nodes",
    "Partition#422 rejected: component had \u003e2 join nodes",
    "Partition#423 rejected: component had \u003e2 join nodes",
    "Partition#424 rejected: component had \u003e2 join nodes",
    "Partition#425 rejected: component had \u003e2 join nodes",
    "Partition#426 rejected: component had \u003e2 join nodes",
    "Partition#427 rejected: component had \u003e2 join nodes",
    "Partition#428 rejected: component had \u003e2 join nodes",
    "Partition#429 rejected: component had \u003e2 join nodes",
    "Partition#430 rejected: component had \u003e2 join nodes",
    "Partition#431 rejected: component had \u003e2 join nodes",
    "Partition#432 rejected: component had \u003e2 join nodes",
    "Partition#433 rejected: component had \u003e2 join nodes",
    "Partition#434 rejected: component had \u003e2 join nodes",
    "Partition#435 rejected: component had \u003e2 join nodes",
    "Partition#436 rejected: component had \u003e2 join nodes",
    "Partition#437 rejected: component had \u003e2 join nodes",
    "Partition#438 rejected: component had \u003e2 join nodes",
    "Partition#439 rejected: component had \u003e2 join nodes",
    "Partition#440 rejected: component had \u003e2 join nodes",
    "Partition#441 rejected: component had \u003e2 join nodes",
    "Partition#443 rejected: component had \u003e2 join nodes",
    "Partition#444 rejected: component had \u003e2 join nodes",
    "Partition#445 rejected: component had \u003e2 join nodes",
    "Partition#446 rejected: component had \u003e2 join nodes",
    "Partition#447 rejected: component had \u003e2 join nodes",
    "Partition#448 rejected: component had \u003e2 join nodes",
    "Partition#449 rejected: component had \u003e2 join nodes",
    "Partition#450 rejected: component had \u003e2 join nodes",
    "Partition#451 rejected: component had \u003e2 join nodes",
    "Partition#452 rejected: component had \u003e2 join nodes",
    "Partition#453 rejected: component had \u003e2 join nodes",
    "Partition#454 rejected: component had \u003e2 join nodes",
    "Partition#455 rejected: component had \u003e2 join nodes",
    "Partition#456 rejected: component had \u003e2 join nodes",
    "Partition#457 rejected: component had \u003e2 join nodes",
    "Partition#458 rejected: component had \u003e2 join nodes",
    "Partition#459 rejected: component had \u003e2 join nodes",
    "Partition#460 rejected: component had \u003e2 join nodes",
    "Partition#461 rejected: component had \u003e2 join nodes",
    "Partition#462 rejected: component had \u003e2 join nodes",
    "Partition#463 rejected: component had \u003e2 join nodes",
    "Partition#464 rejected: component had \u003e2 join nodes",
    "Partition#465 rejected: component had \u003e2 join nodes",
    "Partition#466 rejected: component had \u003e2 join nodes",
    "Partition#467 rejected: component had \u003e2 join nodes",
    "Partition#468 rejected: component had \u003e2 join nodes",
    "Partition#469 rejected: component had \u003e2 join nodes",
    "Partition#470 rejected: component had \u003e2 join nodes",
    "Partition#471 rejected: component had \u003e2 join nodes",
    "Partition#472 rejected: component had \u003e2 join nodes",
    "Partition#473 rejected: component had \u003e2 join nodes",
    "Partition#474 rejected: component had \u003e2 join nodes",
    "Partition#475 rejected: component had \u003e2 join nodes",
    "Partition#476 rejected: component had \u003e2 join nodes",
    "Partition#477 rejected: component had \u003e2 join nodes",
    "Partition#478 rejected: component had \u003e2 join nodes",
    "Partition#479 rejected: component had \u003e2 join nodes",
    "Partition#480 rejected: component had \u003e2 join nodes",
    "Partition#481 rejected: component had \u003e2 join nodes",
    "Partition#482 rejected: component had \u003e2 join nodes",
    "Partition#483 rejected: component had \u003e2 join nodes",
    "Partition#484 rejected: component had \u003e2 join nodes",
    "Partition#485 rejected: component had \u003e2 join nodes",
    "Partition#486 rejected: component had \u003e2 join nodes",
    "Partition#487 rejected: component had \u003e2 join nodes",
    "Partition#488 rejected: component had \u003e2 join nodes",
    "Partition#489 rejected: component had \u003e2 join nodes",
    "Partition#490 rejected: component had \u003e2 join nodes",
    "Partition#491 rejected: component had \u003e2 join nodes",
    "Partition#492 rejected: component had \u003e2 join nodes",
    "Partition#493 rejected: component had \u003e2 join nodes",
    "Partition#494 rejected: component had \u003e2 join nodes",
    "Partition#495 rejected: component had \u003e2 join nodes",
    "Partition#496 rejected: component had \u003e2 join nodes",
    "Partition#497 rejected: component had \u003e2 join nodes",
    "Partition#498 rejected: component had \u003e2 join nodes",
    "Partition#499 rejected: component had \u003e2 join nodes",
    "Partition#500 rejected: component had \u003e2 join nodes",
    "Partition#501 rejected: component had \u003e2 join nodes",
    "Partition#502 rejected: component had \u003e2 join nodes",
    "Partition#503 rejected: component had \u003e2 join nodes",
    "Partition#504 rejected: component had \u003e2 join nodes",
    "Partition#505 rejected: component had \u003e2 join nodes",
    "Partition#506 rejected: component had \u003e2 join nodes",
    "Partition#507 rejected: component had \u003e2 join nodes",
    "Partition#508 rejected: component had \u003e2 join nodes",
    "Partition#509 rejected: component had \u003e2 join nodes",
    "Partition#510 rejected: component had \u003e2 join nodes",
    "Partition#511 rejected: component had \u003e2 join nodes",
    "Partition#512 rejected: component had \u003e2 join nodes",
    "Partition#513 rejected: component had \u003e2 join nodes",
    "Partition#514 rejected: component had \u003e2 join nodes",
    "Partition#515 rejected: component had \u003e2 join nodes",
    "Partition#516 rejected: component had \u003e2 join nodes",
    "Partition#517 rejected: component had \u003e2 join nodes",
    "Partition#518 rejected: component had \u003e2 join nodes",
    "Partition#519 rejected: component had \u003e2 join nodes",
    "Partition#520 rejected: component had \u003e2 join nodes",
    "Partition#521 rejected: component had \u003e2 join nodes",
    "Partition#522 rejected: component had \u003e2 join nodes",
    "Partition#523 rejected: component had \u003e2 join nodes",
    "Partition#524 rejected: component had \u003e2 join nodes",
    "Partition#525 rejected: component had \u003e2 join nodes",
    "Partition#526 rejected: component had \u003e2 join nodes",
    "Partition#527 rejected: component had \u003e2 join nodes",
    "Partition#528 rejected: component had \u003e2 join nodes",
    "Partition#529 rejected: component had \u003e2 join nodes",
    "Partition#530 rejected: component had \u003e2 join nodes",
    "Partition#531 rejected: component had \u003e2 join nodes",
    "Partition#532 rejected: component had \u003e2 join nodes",
    "Partition#533 rejected: component had \u003e2 join nodes",
    "Partition#534 rejected: component had \u003e2 join nodes",
    "Partition#535 rejected: component had \u003e2 join nodes",
    "Partition#536 rejected: component had \u003e2 join nodes",
    "Partition#537 rejected: component had \u003e2 join nodes",
    "Partition#538 rejected: component had \u003e2 join nodes",
    "Partition#539 rejected: component had \u003e2 join nodes",
    "Partition#540 rejected: component had \u003e2 join nodes",
    "Partition#541 rejected: component had \u003e2 join nodes",
    "Partition#542 rejected: component had \u003e2 join nodes",
    "Partition#543 rejected: component had \u003e2 join nodes",
    "Partition#544 rejected: component had \u003e2 join nodes",
    "Partition#545 rejected: component had \u003e2 join nodes",
    "Partition#546 rejected: component had \u003e2 join nodes",
    "Partition#547 rejected: component had \u003e2 join nodes",
    "Partition#548 rejected: component had \u003e2 join nodes",
    "Partition#549 rejected: component had \u003e2 join nodes",
    "Partition#550 rejected: component had \u003e2 join nodes",
    "Partition#551 rejected: component had \u003e2 join nodes",
    "Partition#552 rejected: component had \u003e2 join nodes",
    "Partition#553 rejected: component had \u003e2 join nodes",
    "Partition#554 rejected: component had \u003e2 join nodes",
    "Partition#555 rejected: component had \u003e2 join nodes",
    "Partition#556 rejected: component had \u003e2 join nodes",
    "Partition#557 rejected: component had \u003e2 join nodes",
    "Partition#558 rejected: component had \u003e2 join nodes",
    "Partition#559 rejected: component had \u003e2 join nodes",
    "Partition#560 rejected: component had \u003e2 join nodes",
    "Partition#561 rejected: component had \u003e2 join nodes",
    "Partition#562 rejected: component had \u003e2 join nodes",
    "Partition#563 rejected: component had \u003e2 join nodes",
    "Partition#564 rejected: component had \u003e2 join nodes",
    "Partition#565 rejected: component had \u003e2 join nodes",
    "Partition#566 rejected: component had \u003e2 join nodes",
    "Partition#567 rejected: component had \u003e2 join nodes",
    "Partition#568 rejected: component had \u003e2 join nodes",
    "Partition#569 rejected: component had \u003e2 join nodes",
    "Partition#570 rejected: component had \u003e2 join nodes",
    "Partition#571 rejected: component had \u003e2 join nodes",
    "Partition#572 rejected: component had \u003e2 join nodes",
    "Partition#573 rejected: component had \u003e2 join nodes",
    "Partition#574 rejected: component had \u003e2 join nodes",
    "Partition#575 rejected: component had \u003e2 join nodes",
    "Partition#576 rejected: component had \u003e2 join nodes",
    "Partition#577 rejected: component had \u003e2 join nodes",
    "Partition#578 rejected: component had \u003e2 join nodes",
    "Partition#579 rejected: component had \u003e2 join nodes",
    "Partition#580 rejected: component had \u003e2 join nodes",
    "Partition#581 rejected: component had \u003e2 join nodes",
    "Partition#582 rejected: component had \u003e2 join nodes",
    "Partition#583 rejected: component had \u003e2 join nodes",
    "Partition#584 rejected: component had \u003e2 join nodes",
    "Partition#585 rejected: component had \u003e2 join nodes",
    "Partition#586 rejected: component had \u003e2 join nodes",
    "Partition#587 rejected: component had \u003e2 join nodes",
    "Partition#588 rejected: component had \u003e2 join nodes",
    "Partition#589 rejected: component had \u003e2 join nodes",
    "Partition#590 rejected: component had \u003e2 join nodes",
    "Partition#591 rejected: component had \u003e2 join nodes",
    "Partition#592 rejected: component had \u003e2 join nodes",
    "Partition#593 rejected: component had \u003e2 join nodes",
    "Partition#594 rejected: component had \u003e2 join nodes",
    "Partition#595 rejected: component had \u003e2 join nodes",
    "Partition#596 rejected: component had \u003e2 join nodes",
    "Partition#597 rejected: component had \u003e2 join nodes",
    "Partition#598 rejected: component had \u003e2 join nodes",
    "Partition#599 rejected: component had \u003e2 join nodes",
    "Partition#600 rejected: component had \u003e2 join nodes",
    "Partition#601 rejected: component had \u003e2 join nodes",
    "Partition#602 rejected: component had \u003e2 join nodes",
    "Partition#603 rejected: component had \u003e2 join nodes",
    "Partition#604 rejected: component had \u003e2 join nodes",
    "Partition#605 rejected: component had \u003e2 join nodes",
    "Partition#606 rejected: component had \u003e2 join nodes",
    "Partition#607 rejected: component had \u003e2 join nodes",
    "Partition#608 rejected: component had \u003e2 join nodes",
    "Partition#609 rejected: component had \u003e2 join nodes",
    "Partition#610 rejected: component had \u003e2 join nodes",
    "Partition#611 rejected: component had \u003e2 join nodes",
    "Partition#612 rejected: component had \u003e2 join nodes",
    "Partition#613 rejected: component had \u003e2 join nodes",
    "Partition#614 rejected: component had \u003e2 join nodes",
    "Partition#615 rejected: component had \u003e2 join nodes",
    "Partition#616 rejected: component had \u003e2 join nodes",
    "Partition#617 rejected: component had \u003e2 join nodes",
    "Partition#618 rejected: component had \u003e2 join nodes",
    "Partition#619 rejected: component had \u003e2 join nodes",
    "Partition#620 rejected: component had \u003e2 join nodes",
    "Partition#621 rejected: component had \u003e2 join nodes",
    "Partition#622 rejected: component had \u003e2 join nodes",
    "Partition#623 rejected: component had \u003e2 join nodes",
    "Partition#624 rejected: component had \u003e2 join nodes",
    "Partition#625 rejected: component had \u003e2 join nodes",
    "Partition#626 rejected: component had \u003e2 join nodes",
    "Partition#627 rejected: component had \u003e2 join nodes",
    "Partition#628 rejected: component had \u003e2 join nodes",
    "Partition#629 rejected: component had \u003e2 join nodes",
    "Partition#630 rejected: component had \u003e2 join nodes",
    "Partition#631 rejected: component had \u003e2 join nodes",
    "Partition#632 rejected: component had \u003e2 join nodes",
    "Partition#633 rejected: component had \u003e2 join nodes",
    "Partition#634 rejected: component had \u003e2 join nodes",
    "Partition#635 rejected: component had \u003e2 join nodes",
    "Partition#636 rejected: component had \u003e2 join nodes",
    "Partition#637 rejected: component had \u003e2 join nodes",
    "Partition#638 rejected: component had \u003e2 join nodes",
    "Partition#639 rejected: component had \u003e2 join nodes",
    "Partition#640 rejected: component had \u003e2 join nodes",
    "Partition#641 rejected: component had \u003e2 join nodes",
    "Partition#642 rejected: component had \u003e2 join nodes",
    "Partition#643 rejected: component had \u003e2 join nodes",
    "Partition#644 rejected: component had \u003e2 join nodes",
    "Partition#645 rejected: component had \u003e2 join nodes",
    "Partition#646 rejected: component had \u003e2 join nodes",
    "Partition#647 rejected: component had \u003e2 join nodes",
    "Partition#648 rejected: component had \u003e2 join nodes",
    "Partition#649 rejected: component had \u003e2 join nodes",
    "Partition#650 rejected: component had \u003e2 join nodes",
    "Partition#651 rejected: component had \u003e2 join nodes",
    "Partition#652 rejected: component had \u003e2 join nodes",
    "Partition#653 rejected: component had \u003e2 join nodes",
    "Partition#654 rejected: component had \u003e2 join nodes",
    "Partition#655 rejected: component had \u003e2 join nodes",
    "Partition#656 rejected: component had \u003e2 join nodes",
    "Partition#657 rejected: component had \u003e2 join nodes",
    "Partition#658 rejected: component had \u003e2 join nodes",
    "Partition#659 rejected: component had \u003e2 join nodes",
    "Partition#660 rejected: component had \u003e2 join nodes",
    "Partition#661 rejected: component had \u003e2 join nodes",
    "Partition#662 rejected: component had \u003e2 join nodes",
    "Partition#663 rejected: component had \u003e2 join nodes",
    "Partition#664 rejected: component had \u003e2 join nodes",
    "Partition#665 rejected: component had \u003e2 join nodes",
    "Partition#666 rejected: component had \u003e2 join nodes",
    "Partition#667 rejected: component had \u003e2 join nodes",
    "Partition#668 rejected: component had \u003e2 join nodes",
    "Partition#669 rejected: component had \u003e2 join nodes",
    "Partition#670 rejected: component had \u003e2 join nodes",
    "Partition#671 rejected: component had \u003e2 join nodes",
    "Partition#672 rejected: component had \u003e2 join nodes",
    "Partition#673 rejected: component had \u003e2 join nodes",
    "Partition#674 rejected: component had \u003e2 join nodes",
    "Partition#675 rejected: component had \u003e2 join nodes",
    "Partition#676 rejected: component had \u003e2 join nodes",
    "Partition#677 rejected: component had \u003e2 join nodes",
    "Partition#678 rejected: component had \u003e2 join nodes",
    "Partition#679 rejected: component had \u003e2 join nodes",
    "Partition#680 rejected: component had \u003e2 join nodes",
    "Partition#681 rejected: component had \u003e2 join nodes",
    "Partition#682 rejected: component had \u003e2 join nodes",
    "Partition#683 rejected: component had \u003e2 join nodes",
    "Partition#684 rejected: component had \u003e2 join nodes",
    "Partition#685 rejected: component had \u003e2 join nodes",
    "Partition#686 rejected: component had \u003e2 join nodes",
    "Partition#687 rejected: component had \u003e2 join nodes",
    "Partition#688 rejected: component had \u003e2 join nodes",
    "Partition#689 rejected: component had \u003e2 join nodes",
    "Partition#690 rejected: component had \u003e2 join nodes",
    "Partition#691 rejected: component had \u003e2 join nodes",
    "Partition#692 rejected: component had \u003e2 join nodes",
    "Partition#693 rejected: component had \u003e2 join nodes",
    "Partition#694 rejected: component had \u003e2 join nodes",
    "Partition#695 rejected: component had \u003e2 join nodes",
    "Partition#696 rejected: component had \u003e2 join nodes",
    "Partition#697 rejected: component had \u003e2 join nodes",
    "Partition#698 rejected: component had \u003e2 join nodes",
    "Partition#699 rejected: component had \u003e2 join nodes",
    "Partition#700 rejected: component had \u003e2 join nodes",
    "Partition#701 rejected: component had \u003e2 join nodes",
    "Partition#702 rejected: component had \u003e2 join nodes",
    "Partition#703 rejected: component had \u003e2 join nodes",
    "Partition#704 rejected: component had \u003e2 join nodes",
    "Partition#705 rejected: component had \u003e2 join nodes",
    "Partition#706 rejected: component had \u003e2 join nodes",
    "Partition#707 rejected: component had \u003e2 join nodes",
    "Partition#708 rejected: component had \u003e2 join nodes",
    "Partition#709 rejected: component had \u003e2 join nodes",
    "Partition#710 rejected: component had \u003e2 join nodes",
    "Partition#711 rejected: component had \u003e2 join nodes",
    "Partition#712 rejected: component had \u003e2 join nodes",
    "Partition#713 rejected: component had \u003e2 join nodes",
    "Partition#714 rejected: component had \u003e2 join nodes",
    "Partition#715 rejected: component had \u003e2 join nodes",
    "Partition#716 rejected: component had \u003e2 join nodes",
    "Partition#717 rejected: component had \u003e2 join nodes",
    "Partition#718 rejected: component had \u003e2 join nodes",
    "Partition#719 rejected: component had \u003e2 join nodes",
    "Partition#720 rejected: component had \u003e2 join nodes",
    "Partition#721 rejected: component had \u003e2 join nodes",
    "Partition#722 rejected: component had \u003e2 join nodes",
    "Partition#723 rejected: component had \u003e2 join nodes",
    "Partition#724 rejected: component had \u003e2 join nodes",
    "Partition#725 rejected: component had \u003e2 join nodes",
    "Partition#726 rejected: component had \u003e2 join nodes",
    "Partition#727 rejected: component had \u003e2 join nodes",
    "Partition#728 rejected: component had \u003e2 join nodes",
    "Partition#729 rejected: component had \u003e2 join nodes",
    "Partition#730 rejected: component had \u003e2 join nodes",
    "Partition#731 rejected: component had \u003e2 join nodes",
    "Partition#732 rejected: component had \u003e2 join nodes",
    "Partition#733 rejected: component had \u003e2 join nodes",
    "Partition#734 rejected: component had \u003e2 join nodes",
    "Partition#735 rejected: component had \u003e2 join nodes",
    "Partition#736 rejected: component had \u003e2 join nodes",
    "Partition#737 rejected: component had \u003e2 join nodes",
    "Partition#738 rejected: component had \u003e2 join nodes",
    "Partition#739 rejected: component had \u003e2 join nodes",
    "Partition#740 rejected: component had \u003e2 join nodes",
    "Partition#741 rejected: component had \u003e2 join nodes",
    "Partition#742 rejected: component had \u003e2 join nodes",
    "Partition#743 rejected: component had \u003e2 join nodes",
    "Partition#744 rejected: component had \u003e2 join nodes",
    "Partition#745 rejected: component had \u003e2 join nodes",
    "Partition#746 rejected: component had \u003e2 join nodes",
    "Partition#747 rejected: component had \u003e2 join nodes",
    "Partition#748 rejected: component had \u003e2 join nodes",
    "Partition#749 rejected: component had \u003e2 join nodes",
    "Partition#750 rejected: component had \u003e2 join nodes",
    "Partition#751 rejected: component had \u003e2 join nodes",
    "Partition#752 rejected: component had \u003e2 join nodes",
    "Partition#753 rejected: component had \u003e2 join nodes",
    "Partition#754 rejected: component had \u003e2 join nodes",
    "Partition#755 rejected: component had \u003e2 join nodes",
    "Partition#756 rejected: component had \u003e2 join nodes",
    "Partition#757 rejected: component had \u003e2 join nodes",
    "Partition#758 rejected: component had \u003e2 join nodes",
    "Partition#1 component#7 rejected: endpoints not on join nodes for bits [6]",
    "Partition#3 component#6 rejected: endpoints not on join nodes for bits [6]",
    "Partition#6 component#6 rejected: endpoints not on join nodes for bits [6]",
    "Partition#8 component#6 rejected: endpoints not on join nodes for bits [6]",
    "Partition#11 component#5 rejected: endpoints not on join nodes for bits [6]",
    "Partition#15 component#5 rejected: endpoints not on join nodes for bits [6]",
    "Partition#18 component#5 rejected: endpoints not on join nodes for bits [6]",
    "Partition#22 component#4 rejected: endpoints not on join nodes for bits [6]",
    "Partition#35 component#3 rejected: endpoints not on join nodes for bits [6]",
    "Partition#37 component#4 rejected: endpoints not on join nodes for bits [6]",
    "Partition#43 component#3 rejected: endpoints not on join nodes for bits [6]",
    "Partition#44 component#3 rejected: endpoints not on join nodes for bits [6]"
  ],
  "partitions": [
    {
      "L": 1,
      "M": 7,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,5",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,5",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "6",
          "vertices": [
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        }
      ]
    },
    {
      "L": 7,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    }
  ],
  "valid_partitions": [
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 2,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 2,
      "M": 3,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 3,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 4,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,5",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "L": 5,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "L": 6,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        }
      ]
    },
    {
      "L": 7,
      "M": 1,
      "components": [
        {
          "edge_bits": "0,1,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    }
  ],
  "partition_evaluations": [
    {
      "index": 2,
      "component_options": [
        2,
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 4,
      "component_options": [
        2,
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 5,
      "component_options": [
        2,
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 7,
      "component_options": [
        2,
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 9,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 10,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 12,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 13,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 14,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 16,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 17,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 19,
      "component_options": [
        2,
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 20,
      "component_options": [
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 21,
      "component_options": [
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 23,
      "component_options": [
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 24,
      "component_options": [
        2,
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 25,
      "component_options": [
        2,
        2,
        6
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 26,
      "component_options": [
        2,
        6,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 27,
      "component_options": [
        2,
        2,
        2,
        6
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 28,
      "component_options": [
        2,
        2,
        6,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 29,
      "component_options": [
        2,
        2,
        2,
        6
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 30,
      "component_options": [
        2,
        6,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 31,
      "component_options": [
        2,
        2,
        2,
        2,
        6
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "3",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 32,
      "component_options": [
        2,
        2,
        6,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,6",
          "vertices": [
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 33,
      "component_options": [
        2,
        6
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 34,
      "component_options": [
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 36,
      "component_options": [
        2,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 38,
      "component_options": [
        2,
        12
      ],
      "components": [
        {
          "edge_bits": "0,1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "index": 39,
      "component_options": [
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,4",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 40,
      "component_options": [
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,5",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,6",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 41,
      "component_options": [
        8,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4,5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 42,
      "component_options": [
        2,
        2,
        12
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "index": 45,
      "component_options": [
        8,
        2,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 46,
      "component_options": [
        2,
        12
      ],
      "components": [
        {
          "edge_bits": "0",
          "vertices": [
            "A",
            "B"
          ]
        },
        {
          "edge_bits": "1,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ]
    },
    {
      "index": 47,
      "component_options": [
        12,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,4,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "5",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 48,
      "component_options": [
        12,
        2
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "4",
          "vertices": [
            "A",
            "C"
          ]
        }
      ]
    },
    {
      "index": 49,
      "component_options": [
        12,
        2
      ],
      "components": [
        {
          "edge_bits": "0,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        },
        {
          "edge_bits": "1",
          "vertices": [
            "A",
            "B"
          ]
        }
      ]
    },
    {
      "index": 50,
      "component_options": [
        156
      ],
      "components": [
        {
          "edge_bits": "0,1,2,3,4,5,6",
          "vertices": [
            "A",
            "B",
            "C"
          ]
        }
      ],
      "tuples": [
        [
          {
            "edges": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "source": "A",
            "target": "A",
            "rule": "((((((r1 ∩ r2)◦(r3 ∩ r4)) ∩ r5⁻)◦(r6 ∩ id))◦r6) ∩ id)"
          }
        ]
      ]
    }
  ]
}

BUILD SUCCESSFUL in 14s
2 actionable tasks: 1 executed, 1 up-to-date
 